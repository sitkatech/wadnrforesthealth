@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@inherits ProjectFirma.Web.Views.User.Detail

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Views/PersonOrganization/PersonOrganizationController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/Shared/UserStewardshipAreas/EditUserStewardshipAreasController.js")" type="text/javascript"></script>

    <style type="text/css">
        .paddedTableCell {
            padding-left: 8px;
            padding-right: 8px;
            padding-bottom: 3px;
        }
    </style>

}

@section RightOfPageTitle
{
    @if (ViewDataTyped.UserHasAdminPermission && !ViewDataTyped.PersonIsMereContact)
    {
        @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0} {1} User", "<span class='glyphicon glyphicon-edit blue''></span>", ViewDataTyped.Person.IsActive ? "Inactivate" : "Activate"), ViewDataTyped.ActivateInactivateUrl, string.Format("{0} this user?", ViewDataTyped.Person.IsActive ? "Inactivate" : "Activate"), 400, "Continue", "Cancel", null, null, null)
    }
}

@if (ViewDataTyped.UserHasEditBasicsPermission)
{
    <div>
        <a class="btn backButton" href="@ViewDataTyped.Index">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all Users</a>
    </div>
}
@if (ViewDataTyped.PersonIsMereContact)
{
    <div class="alert alert-info">
        @ViewDataTyped.Person.FullNameFirstLast is a contact and does not have a user account in the system.
    </div>

}

<div class="row">
    <div class="col-md-6">
        <div class="panel panelFirma">
            <div class="panel-heading panelTitle">
                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditContactUrl, string.Format("Edit Contact"), 950, ViewDataTyped.UserHasEditBasicsPermission)
                Basics
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">Name</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.FullNameFirstLastAndMiddle</div>
                </div>
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">Email</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.Email</div>
                </div>
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">Phone</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.Phone</div>
                </div>
                @if (!ViewDataTyped.PersonIsMereContact)
                {
                    <div class="row">
                        <div class="col-xs-5 fieldLabel text-right">@FieldDefinition.Username.GetFieldDefinitionLabel()</div>
                        <div class="col-xs-7">@ViewDataTyped.Person.LoginName</div>
                    </div>
                }
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">@FieldDefinition.Organization.GetFieldDefinitionLabel()</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.Organization.GetDisplayNameAsUrl()</div>
                </div>

                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">Mailing Address</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.PersonAddress</div>
                </div>
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">@Html.LabelWithSugarFor(FieldDefinition.StatewideVendorNumber)</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.StatewideVendorNumber</div>
                </div>
                <div class="row">
                    <div class="col-xs-5 fieldLabel text-right">Notes</div>
                    <div class="col-xs-7">@ViewDataTyped.Person.Notes</div>
                </div>
                @if (ViewDataTyped.UserHasEditBasicsPermission)
                {
                    if (!ViewDataTyped.PersonIsMereContact)
                    {
                        <div class="row">
                            <div class="col-xs-5 fieldLabel text-right">Last Activity</div>
                            <div class="col-xs-7">@ViewDataTyped.Person.LastActivityDate.ToStringDateTimeNoLeadingZeros()</div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-xs-5 fieldLabel text-right">Added On</div>
                        <div class="col-xs-7">@ViewDataTyped.Person.CreateDate.ToStringDateTimeNoLeadingZeros()</div>
                    </div>
                    if (ViewDataTyped.PersonIsMereContact)
                    {
                        <div class="row">
                            <div class="col-xs-5 fieldLabel text-right">Added By</div>
                            <div class="col-xs-7">@ViewDataTyped.Person.AddedByPerson.FullNameFirstLast</div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    @if (!ViewDataTyped.PersonIsMereContact && ViewDataTyped.UserHasAdminPermission || ViewDataTyped.IsViewingSelf)
    {
        <div class="col-md-6">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    @ViewDataTyped.EditRolesLink Roles
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-4 fieldLabel text-right">Role</div>
                        <div class="col-xs-8">
                            @if (ViewDataTyped.UserHasEditBasicsPermission)
                            {
                                @ViewDataTyped.Person.Role.GetDisplayNameAsUrl()
                            }
                            else
                            {
                                @ViewDataTyped.Person.Role.RoleDisplayName
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-4 fieldLabel text-right">Receive Support Emails</div>
                        <div class="col-xs-8">@ViewDataTyped.Person.ReceiveSupportEmails.ToYesNo()</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    @if (ViewDataTyped.UserHasEditBasicsPermission && ViewDataTyped.TenantHasStewardshipAreas && ViewDataTyped.Person.Role == Role.ProjectSteward)
                    {
                        <span>
                            @ModalDialogFormHelper.MakeEditIconLink(SitkaRoute<UserController>.BuildUrlFromExpression(c => c.EditStewardshipAreas(ViewDataTyped.Person)),
                                string.Format("Edit {1} for User - {0}", ViewDataTyped.Person.FullNameFirstLast, FieldDefinition.ProjectStewardshipArea.GetFieldDefinitionLabelPluralized()),
                                true)
                        </span>
                    }
                    Assigned @FieldDefinition.ProjectStewardshipArea.GetFieldDefinitionLabelPluralized()
                </div>
                <div class="panel-body">
                    @if (ViewDataTyped.Person.IsAdministrator())
                    {
                        <p class="systemText">
                            @ViewDataTyped.Person.FullNameFirstLast is an Administrator and can manage all @FieldDefinition.ProjectStewardshipArea.GetFieldDefinitionLabelPluralized().
                        </p>
                    }
                    else if (ViewDataTyped.Person.IsAnonymousOrUnassigned)
                    {
                        <p class="systemText">
                            @ViewDataTyped.Person.FullNameFirstLast is not assigned a role and cannot add or edit any @FieldDefinition.Project.GetFieldDefinitionLabelPluralized().
                        </p>
                    }
                    else if (ViewDataTyped.Person.Role == Role.Normal)
                    {
                        <p class="systemText">
                            @ViewDataTyped.Person.FullNameFirstLast is a @FieldDefinition.NormalUser.GetFieldDefinitionLabel() and can add @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() to any @FieldDefinition.ProjectStewardshipArea.GetFieldDefinitionLabel(), but cannot edit/manage @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() that are not their own.
                        </p>
                    }
                    else
                    {
                        var projectStewardshipAreaHtmlStringList = ViewDataTyped.Person.GetProjectStewardshipAreaHtmlStringList();
                        if (!ViewDataTyped.TenantHasStewardshipAreas)
                        {
                            <p class="systemText">@FieldDefinition.ProjectSteward.GetFieldDefinitionLabelPluralized() can approve @FieldDefinition.Project.GetFieldDefinitionLabel() Proposals, create new @FieldDefinition.Project.GetFieldDefinitionLabelPluralized(), and approve @FieldDefinition.Project.GetFieldDefinitionLabel() Updates for all @FieldDefinition.Project.GetFieldDefinitionLabelPluralized()</p>
                        }
                        else if (projectStewardshipAreaHtmlStringList.Any())
                        {
                            <ul>
                                @foreach (var link in projectStewardshipAreaHtmlStringList)
                                {
                                    <li>
                                        @link
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="systemText">@ViewDataTyped.Person.FullNameFirstLast is not assigned to manage @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() in any @FieldDefinition.ProjectStewardshipArea.GetFieldDefinitionLabel().</p>
                        }
                    }

                </div>
            </div>
        </div>

    }
</div>
@if (!ViewDataTyped.PersonIsMereContact)
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPersonOrganizationPrimaryContactUrl, string.Format("Edit {0} for which {1} is a {2}", FieldDefinition.Organization.GetFieldDefinitionLabelPluralized(), ViewDataTyped.Person.FullNameFirstLast, FieldDefinition.OrganizationPrimaryContact.GetFieldDefinitionLabel()), ViewDataTyped.UserHasAdminPermission) @string.Format("Organizations for which {0} is a {1}", ViewDataTyped.Person.FullNameFirstLast, FieldDefinition.OrganizationPrimaryContact.GetFieldDefinitionLabel())
                </div>
                <div class="panel-body">
                    @if (ViewDataTyped.Person.PrimaryContactOrganizations.Any())
                    {
                        <ul style="margin: 5px 0">
                            @foreach (var organization in ViewDataTyped.Person.PrimaryContactOrganizations)
                            {
                                <li>@organization.GetDisplayNameAsUrl()</li>
                            }
                        </ul>
                    }
                </div>
            </div>

        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <div class="panel panelFirma">
            <div class="panel-heading panelTitle">
                @ViewDataTyped.ProjectsForWhichUserIsAContactGridTitle
            </div>
            <div class="panel-body">
                @Html.DhtmlxGrid(ViewDataTyped.BasicProjectInfoGridSpec, ViewDataTyped.BasicProjectInfoGridName, ViewDataTyped.BasicProjectInfoGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel panelFirma">
            <div class="panel-heading panelTitle">
                @ViewDataTyped.AgreementsForWhichUserIsAContactGridTitle
            </div>
            <div class="panel-body">
                @Html.DhtmlxGrid(ViewDataTyped.UserAgreementsGridSpec, ViewDataTyped.UserAgreementsGridName, ViewDataTyped.UserAgreementsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
            </div>
        </div>
    </div>
</div>
@if (!ViewDataTyped.PersonIsMereContact)
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    System Communications
                </div>
                <div class="panel-body">
                    @Html.DhtmlxGrid(ViewDataTyped.UserNotificationGridSpec, ViewDataTyped.UserNotificationGridName, ViewDataTyped.UserNotificationGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                </div>
            </div>
        </div>
    </div>
}