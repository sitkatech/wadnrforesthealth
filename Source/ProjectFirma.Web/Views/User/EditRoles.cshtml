@*-----------------------------------------------------------------------
    <copyright file="EditRoles.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Models.Attributes
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.User.EditRoles


<script type="text/javascript" src="@Url.Content("~/Views/User/EditRolesController.js")"></script>

<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function ()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    jQuery(document).ready(function ()
    {
        angular.bootstrap(jQuery("#EditRolesAngularApp"), ["ProjectFirmaApp"]);

        jQuery(".selectpicker").selectpicker("refresh");
        jQuery(".modal").on("hidden.bs.modal",
            function() {
                jQuery(".bootstrap-select.open").removeClass("open");
            });

        jQuery(".modal").css({"overflow": "visible"});
        jQuery(".modal-body").css({"overflow-y": "visible"});

    });
    // ]]>
</script>

<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />

<style type="text/css">
    td, th {
        padding-left: 8px;
        padding-right: 8px;
        padding-bottom: 3px;
    }
</style>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <div class="form-horizontal" id="EditRolesAngularApp" ng-controller="EditRolesController">
        @if (ViewDataTyped.CanEditBaseRole)
        {
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.BaseRoleID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.BaseRoleID, ViewDataTyped.AllBaseRoles, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.BaseRoleID)
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(m => m.BaseRoleID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.BaseRoleID, ViewDataTyped.AllBaseRoles, new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(m => m.BaseRoleID)
                    @Html.HiddenFor(m=>m.BaseRoleID)
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-12">@Html.LabelFor(m => m.RoleSimples)</div>
            <div class="col-md-12">
                <div class="input-group" style="width: 100%;">
                    <select class="selectpicker" id="todo{{AngularViewData.RoleId}}"
                            ng-model="selectedRoleID"
                            data-width="100%" data-live-search="true" data-size="8">
                        <option ng-repeat="role in getAvailableRolesForPerson()"
                                ng-bind="role.RoleDisplayName"
                                ng-value="role.RoleID"
                                ng-selected="isOptionSelected(role)"></option>
                    </select>
                    <button type="button" class="btn btn-sm btn-firma" ng-click="addRole(selectedRoleID)">
                        <span class="glyphicon glyphicon-plus"></span>
                        Add
                    </button>
                </div>
            </div>
            
            <div class="col-md-12">Currently Selected Supplemental Roles:</div>
            <div class="col-md-12" ng-repeat="currentRole in AngularModel.RoleSimples" style="margin-top: 5px;">

                    <span>
                        <a href="#" ng-click="removeSelectedRole(currentRole.RoleID); $event.preventDefault();">
                            <i class="glyphicon glyphicon-trash" title="Remove Role" alt="Remove Role"></i>
                        </a>
                    </span>
                    <span ng-bind="(currentRole.RoleDisplayName)"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ShouldReceiveSupportEmails, new { @class = "col-xs-12 col-sm-3 control-label" })
            <div class="col-xs-12 col-sm-9">
                <div class="radio-inline">
                    <label>
                        @Html.RadioButtonFor(m => m.ShouldReceiveSupportEmails, true) Yes
                    </label>
                </div>
                <div class="radio-inline">
                    <label>
                        @Html.RadioButtonFor(m => m.ShouldReceiveSupportEmails, false) No
                    </label>
                </div>
                @Html.ValidationMessageFor(m => m.ShouldReceiveSupportEmails)
            </div>
        </div>

        <div ng-repeat="role in AngularModel.RoleSimples">
            <input type="hidden" name="@Html.NameFor(x => x.RoleSimples[0].RoleID).ToString().Replace("0", "{{$index}}")" value="{{role.RoleID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.RoleSimples[0].RoleDisplayName).ToString().Replace("0", "{{$index}}")" value="{{role.RoleDisplayName}}" />
        </div>
    </div>


    @Html.HiddenFor(m => m.PersonID)
}
