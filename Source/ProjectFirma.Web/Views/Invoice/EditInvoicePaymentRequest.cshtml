@*-----------------------------------------------------------------------
    <copyright file="EditInvoicePaymentRequest.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Models
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.Invoice.EditInvoicePaymentRequest

@Html.Raw(ViewDataTyped.EditInvoicePaymentRequestType.IntroductoryText)

@Html.ValidationSummary()

<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.InvoicePaymentRequestDate)
            </div>
            <div class="col-xs-6">
                @Html.EditorFor(m => m.InvoicePaymentRequestDate, new { style = "width: 100%;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.InvoicePaymentRequestDate)
            </div>
        </div>

        <div class="form-group form-group-tight">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.PurchaseAuthorityIsLandownerCostShareAgreement)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.PurchaseAuthorityIsLandownerCostShareAgreement, ViewDataTyped.PurchaseAuthorityType, new { style = "width: 100%;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PurchaseAuthorityIsLandownerCostShareAgreement)
            </div>
        </div>
        <div class="form-group" id="purchaseAuthorityTextBoxEntry">
            <div class="col-xs-3 control-label">

            </div>
            <div class="col-xs-6">
                @Html.TextBoxFor(m => m.PurchaseAuthority, new { style = "width: 100%;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PurchaseAuthority)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.Duns)
            </div>
            <div class="col-xs-2">
                @Html.EditorFor(m => m.Duns, new { style = "width: auto;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Duns)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.VendorID)
            </div>
            <div class="col-xs-9">
                <input id="VendorSearchInputTextboxID" type="text" class="form-control"
                       name="VendorSearchInputTextboxID" maxlength="200" value="@Model.VendorName"
                       placeholder="@FieldDefinition.Vendor.GetFieldDefinitionLabel() Name or Number"
                       style="margin-right: -5px; max-width: 300px; margin-left: auto;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.PreparedByPersonID)
            </div>
            <div class="col-xs-9">
                @Html.SearchableDropDownListFor(m => m.PreparedByPersonID, ViewDataTyped.People, new { style = "width: auto;", @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(m => m.PreparedByPersonID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.Notes)
            </div>
            <div class="col-xs-6">
                @Html.TextAreaFor(m => m.Notes, new { style = "width: 100%;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Notes)
            </div>
        </div>

    </div>
    @Html.HiddenFor(m => m.InvoicePaymentRequestID)
    @Html.HiddenFor(m => m.ProjectID)
    @Html.HiddenFor(x => x.VendorID)
}


<script type="text/javascript">
    jQuery(document)
        .ready(function () {


            var purchaseAuthorityIsLandownerCostShare = jQuery("#@Html.IdFor(m => m.PurchaseAuthorityIsLandownerCostShareAgreement)");
            var purchaseAuthority = jQuery("#@Html.IdFor(m => m.PurchaseAuthority)");

            var isPurchaseAuthorityLandOwner = purchaseAuthorityIsLandownerCostShare.val();
            if (isPurchaseAuthorityLandOwner == 'False') {
                purchaseAuthority.removeAttr('disabled');
                jQuery("#purchaseAuthorityTextBoxEntry").show();
            } else {
                purchaseAuthority.attr('disabled', 'disabled');
                jQuery("#purchaseAuthorityTextBoxEntry").hide();
                purchaseAuthority.val('');
            }

            purchaseAuthorityIsLandownerCostShare.on("change", function() {
                var value = purchaseAuthorityIsLandownerCostShare.val();
                if (value == 'False') {
                    purchaseAuthority.removeAttr('disabled');
                    jQuery("#purchaseAuthorityTextBoxEntry").show();
                } else {
                    purchaseAuthority.attr('disabled', 'disabled');
                    jQuery("#purchaseAuthorityTextBoxEntry").hide();
                    purchaseAuthority.val('');
                }
            });


            jQuery("#VendorSearchInputTextboxID")
                .autocomplete({
                        source: "@Html.Raw(ViewDataTyped.VendorFindUrl)",
                        minLength: 2,
                        position: { my: "right top", at: "right bottom" },
                    select: function (event, ui) {

                            //force textbox to display selected value, because angular wont update it until onBlur of input
                            jQuery("#VendorSearchInputTextboxID").val(ui.item.label);
                            jQuery("#@Html.IdFor(x => x.VendorID)").val(ui.item.value);
                            event.preventDefault();

                        },
                        html: true
                    });

        });
</script>
