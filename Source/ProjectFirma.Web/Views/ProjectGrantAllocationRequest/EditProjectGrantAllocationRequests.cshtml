@*-----------------------------------------------------------------------
<copyright file="EditprojectGrantAllocationRequests.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.ProjectGrantAllocationRequest.EditProjectGrantAllocationRequests
<script type="text/javascript">
    // <![CDATA[
    jQuery(function() {
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
            function() {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
                };
            });
        angular.bootstrap(jQuery("#EditGrantAllocationRequestsApp"), ["ProjectFirmaApp"]);

        jQuery(".selectpicker").selectpicker("refresh");
        jQuery(".modal").on("hidden.bs.modal",
            function() {
                jQuery(".bootstrap-select.open").removeClass("open");
            });
    })
    // ]]>
</script>

<div class="row">
    <div class="col-xs-12">
        <div class="validationError">
            @Html.ValidationSummary()
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div ng-app="ProjectFirmaApp" id="EditGrantAllocationRequestsApp" ng-controller="ProjectGrantAllocationRequestController" style="max-height: 600px;">

            @using (Html.BeginForm())
            {
                @Html.HiddenFor(m => m.PrimaryKeyID)
                @Html.HiddenFor(m => m.ForProject)
                if (!ViewDataTyped.FromGrantAllocation)
                {


                    <div class="form-group row">
                        <div class="col-md-4">@Html.LabelWithSugarFor(m => m.ProjectEstimatedTotalCost)</div>
                        <div class="col-md-8">
                            @Html.EditorFor(m => m.ProjectEstimatedTotalCost)
                            @Html.ValidationMessageFor(x => x.ProjectEstimatedTotalCost)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">@Html.LabelWithSugarFor(m => m.FundingSourceIDs)</div>
                        <div class="col-md-8">
                            @Html.CheckBoxListFor(m => m.FundingSourceIDs, ViewDataTyped.FundingSources, new { style = "display:block" }, CheckboxExtensions.ColNumber.twoCols)
                            @Html.ValidationMessageFor(x => x.FundingSourceIDs)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-4">@Html.LabelWithSugarFor(m => m.ProjectFundingSourceNotes)</div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(m => m.ProjectFundingSourceNotes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ProjectFundingSourceNotes)
                        </div>
                    </div>


                    <hr />
                }
                <div ng-repeat="projectGrantAllocationRequest in AngularModel.ProjectGrantAllocationRequests | orderBy:[getGrantAllocationName, getProjectName]">
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.ProjectID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].GrantAllocationID).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.GrantAllocationID}}" />
                    @*<input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].UnsecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.UnsecuredAmount}}" />*@
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].TotalAmount).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.TotalAmount}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].PayAmount).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.PayAmount}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectGrantAllocationRequests[0].MatchAmount).ToString().Replace("0", "{{$index}}")" value="{{projectGrantAllocationRequest.MatchAmount}}" />
                </div>
            }
            @if (ViewDataTyped.FromGrantAllocation)
            {
                <div class="form-group">
                    <label class="control-label">@FieldDefinition.Project.GetFieldDefinitionLabel() to Add:</label>
                    <div class="input-group">
                        <select ng-model="ProjectIDToAdd"
                                class="selectpicker"
                                data-live-search="true"
                                data-container="body"
                                title="Select a @FieldDefinition.Project.GetFieldDefinitionLabel() to Add"
                                data-width="100%">
                            <option value="null" disabled selected></option>
                            <option ng-repeat="project in filteredProjects()"
                                    value="{{project.ProjectID}}"
                                    ng-selected="ProjectIDToAdd == project.ProjectID"
                                    ng-bind="project.DisplayName"
                                    data-tokens="{{project.DisplayName}}"></option>
                        </select>
                        <span class="input-group-btn">
                            <button class="btn btn-firma" type="button" ng-click="addRow()">
                                <span class="glyphicon glyphicon-plus"></span> Add
                            </button>
                        </span>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group row">
                    <div class="col-md-offset-4 col-md-8" style="color: rgb(153, 153, 153)">For projects that were funded with federal funding through Washington DNR, please associate them to a grant allocation ID.</div>
                </div>
                <div class="form-group row">
                 
   
                        <div class="col-md-4">
                            <label class="control-label">@FieldDefinition.GrantAllocation.GetFieldDefinitionLabel() to Add:</label>
                        </div>
                        <div class="col-md-8">
                            <div class="input-group">
                                <select ng-model="GrantAllocationIDToAdd"
                                        class="selectpicker"
                                        data-live-search="true"
                                        data-container="body"
                                        title="Select a @FieldDefinition.GrantAllocation.GetFieldDefinitionLabel() to Add"
                                        data-width="100%">
                                    <option value="null" disabled selected></option>
                                    <option ng-repeat="grantAllocation in filteredGrantAllocations()"
                                            value="{{grantAllocation.GrantAllocationID}}"
                                            ng-selected="GrantAllocationIDToAdd == grantAllocation.GrantAllocationID"
                                            ng-bind="grantAllocation.DisplayName"
                                            data-tokens="{{grantAllocation.DisplayName}}"></option>
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-firma" type="button" ng-click="addRow()">
                                        <span class="glyphicon glyphicon-plus"></span> Add
                                    </button>
                                </span>
                            </div>
                        </div>
                    
                    

                    <br/>
                </div>
            }
            <table class="dialogFormLayout" style="margin-top: 20px; table-layout: fixed" ng-show="AngularModel.ProjectGrantAllocationRequests.length > 0">
                <colgroup>
                    <col class="col-xs-1" />
                    <col class="col-xs-4" />
                    <col class="col-xs-3" style="padding-right: 17px;" />
                </colgroup>
                <tbody>
                    <tr>
                        <th></th>
                        <th style="white-space: nowrap">@Html.Raw(ViewDataTyped.FromGrantAllocation ? Html.LabelWithSugarFor(FieldDefinition.Project) : Html.LabelWithSugarFor(FieldDefinition.GrantAllocation))</th>
                        @if (ViewDataTyped.IsMatchAndPayRelevant)
                        {
                            <th style="text-align: right; padding-right: 17px;">@Html.LabelWithSugarFor(FieldDefinition.ProjectGrantAllocationRequestMatchAmount)</th>
                            <th style="text-align: right; padding-right: 17px;">@Html.LabelWithSugarFor(FieldDefinition.ProjectGrantAllocationRequestPayAmount)</th>
                        }
                        <th style="text-align: right; padding-right: 17px;">@Html.LabelWithSugarFor(FieldDefinition.ProjectGrantAllocationRequestTotalAmount)</th>
                    </tr>
                    <tr ng-repeat="projectGrantAllocationRequest in AngularModel.ProjectGrantAllocationRequests | orderBy:[getGrantAllocationName, getProjectName]" style="padding-bottom: 2px;">
                        <td>
                            <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectGrantAllocationRequest)" style="cursor: pointer"></span>
                        </td>
                        <td ng-bind="@(ViewDataTyped.FromGrantAllocation ? "getProjectName(projectGrantAllocationRequest)" : "getGrantAllocationName(projectGrantAllocationRequest)")">
                        @if (ViewDataTyped.IsMatchAndPayRelevant)
                        {
                            <td style="text-align: right; padding-right: 17px;">
                                <input style="float: right; text-align: right" type="text" ng-model="projectGrantAllocationRequest.MatchAmount" class="sitkaCurrency form-control" ng-currency />
                            </td>
                            <td style="text-align: right; padding-right: 17px;">
                                <input style="float: right; text-align: right" type="text" ng-model="projectGrantAllocationRequest.PayAmount" class="sitkaCurrency form-control" ng-currency />
                            </td>
                        }
                        

                        <td style="text-align: right; padding-right: 17px;">
                            <input style="float: right; text-align: right" type="text" ng-model="projectGrantAllocationRequest.TotalAmount" class="sitkaCurrency form-control" ng-currency />
                        </td>
                    </tr>
                    <tr style="border-top: 1px solid #eeeeee;">
                        <th colspan="2">Total</th>
                        <th style="text-align: right; padding-right: 20px;">
                            {{getTotal() | currency:"$"}}
                        </th>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
