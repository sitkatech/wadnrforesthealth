@*-----------------------------------------------------------------------
    <copyright file="InteractionEventDetail.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared.FileResourceControls
@inherits ProjectFirma.Web.Views.InteractionEvent.InteractionEventDetail
@section JavascriptAndStylesContent
{

    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script type="text/javascript" src="@Url.Content("~/Views/InteractionEvent/InteractionEventController.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Views/InteractionEvent/InteractionEventLocationSimpleController.js")"></script>
    <script type="text/javascript">
        jQuery(function() {
            var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.InteractionEventLocationSummaryMapInitJson).ToString(Formatting.None));
            if (mapInitJson.Layers != null && mapInitJson.Layers.length > 0) {
                window.Sitka.map = new ProjectFirmaMaps.Map(mapInitJson);
            }
        });
    </script>

}


<div>
    <a class="btn backButton" href="@ViewDataTyped.IndexUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all @FieldDefinition.InteractionEvent.FieldDefinitionDisplayName</a>
</div>
<div class="panel panelFirma">
    <div class="panel-heading panelTitle">
        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditInteractionEventBasicsUrl, string.Format("Edit {0} - {1}", FieldDefinition.InteractionEvent.FieldDefinitionDisplayName, ViewDataTyped.InteractionEvent.InteractionEventTitle), ViewDataTyped.UserHasInteractionEventManagePermissions) Details
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">@Html.Label("Title")</div>
                    <div class="col-xs-9">@ViewDataTyped.InteractionEvent.InteractionEventTitle</div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">@Html.Label("Description")</div>
                    <div class="col-xs-9">@(ViewDataTyped.InteractionEvent.InteractionEventDescription)</div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">@Html.Label("Date")</div>
                    <div class="col-xs-9">@(ViewDataTyped.InteractionEvent.DateDisplay)</div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">@Html.Label(FieldDefinition.InteractionEventType.GetFieldDefinitionLabel())</div>
                    <div class="col-xs-9">@(ViewDataTyped.InteractionEvent.InteractionEventType.InteractionEventTypeDisplayName)</div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">@Html.Label(FieldDefinition.DNRStaffPerson.GetFieldDefinitionLabel())</div>
                    <div class="col-xs-9">@(ViewDataTyped.InteractionEvent.StaffPerson.GetFullNameFirstLastAsUrl())</div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right">Contacts</div>
                    <div class="col-xs-2">

                        <ul class="list-unstyled">
                            @foreach (var contact in ViewDataTyped.InteractionEventContacts)
                            {
                                <li>@contact.Person.GetFullNameFirstLastAsUrl()</li>
                            }

                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-2 fieldLabel text-right"><strong>Projects</strong></div>
                    <div class="col-xs-2">

                        <ul class="list-unstyled">
                            @foreach (var interactionEventProject in ViewDataTyped.InteractionEventProjects)
                            {
                                <li>@interactionEventProject.Project.DisplayNameAsUrl</li>
                            }

                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel panelFirma">
    <div class="panel-heading panelTitle">
        <h3>Files</h3>
    </div>
    <div class="panel-body">
        @{ FileDetails.RenderPartialView(Html, ViewDataTyped.InteractionEventDetailFileDetailsViewData); }
    </div>
</div>

<div class="panel panelFirma">
    <div class="panel-heading panelTitle">
        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditInteractionEventLocationSimpleUrl, string.Format("Edit {0} - {1}", FieldDefinition.InteractionEvent.FieldDefinitionDisplayName, ViewDataTyped.InteractionEvent.InteractionEventTitle), ViewDataTyped.LocationMapFormID, ViewDataTyped.UserHasInteractionEventManagePermissions) Location
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-xs-11"><strong>Location</strong></div>
            <div class="col-xs-11">
                @if (ViewDataTyped.InteractionEvent.InteractionEventLocationSimple != null)
                {
                    <div>
                        <div id="@ViewDataTyped.InteractionEventLocationSummaryMapInitJson.MapDivID" style="height: 390px">
                        </div>
                        <span style="font-size: 10px">To zoom, hold down Shift and drag a rectangle.</span>
                    </div>
                }
                else
                {
                    <p>@string.Format("No {0} Location set.", FieldDefinition.InteractionEvent.FieldDefinitionDisplayName)</p>
                }

            </div>
        </div>
    </div>
</div>