@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared.ExpenditureAndBudgetControls
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Views.Shared.TextControls
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using MoreLinq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@using ProjectFirma.Web.Views.ProjectFunding
@using ProjectFirma.Web.Views.Shared.ProjectDocument
@using ProjectFirma.Web.Views.Shared.ProjectOrganization
@using ProjectFirma.Web.Views.Shared.ProjectPerson
@inherits ProjectFirma.Web.Views.Project.Detail

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Views/Shared/PerformanceMeasureControls/PerformanceMeasureExpectedController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/PerformanceMeasureActual/PerformanceMeasureActualController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectFundingSourceExpenditure/ProjectFundingSourceExpenditureController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectFundingSourceRequest/ProjectFundingSourceRequestController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/Shared/ProjectOrganization/ProjectOrganizationController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/Shared/ProjectPerson/ProjectPersonController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectExternalLink/ProjectExternalLinkController.js")" type="text/javascript"></script>
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link href="~/Content/bootstrap-tags/bootstrap-tags.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <script src="@Url.Content("~/Content/bootstrap-toc/bootstrap-toc.min.js")" type="text/javascript"></script>
    

}

<style type="text/css">
    /*Hack to get scrollspy to select sections with no content*/
    footer {
        height: 600px;
    }
    #editLocationDropdownButton:focus {
        text-decoration: none;
    }
</style>

@section RightOfPageTitle
{
    @if (ViewDataTyped.CanLaunchProjectOrProposalWizard)
    {
        <a class="btn btn-firma" href="@ViewDataTyped.ProjectWizardUrl" title="@ViewDataTyped.ProjectUpdateButtonText">@DhtmlxGridHtmlHelpers.EditIconBootstrap @ViewDataTyped.ProjectUpdateButtonText</a>
    }
    <a class="btn btn-firma" href="@ViewDataTyped.Project.GetFactSheetUrl()" title="View Fact Sheet">@FirmaDhtmlxGridHtmlHelpers.FactSheetIcon View Fact Sheet</a>
}


<div>
    <a class="btn backButton" style="padding-left: 0;" href="@ViewDataTyped.ProjectListUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") @ViewDataTyped.BackToProjectsText</a>
</div>

@if (ViewDataTyped.ProjectAlerts.Any())
{
    <div class="alert alert-info">
        @Html.Raw(string.Join("<br />", ViewDataTyped.ProjectAlerts))
    </div>
}

<div class="row" style="margin: 20px 0;">
    <div class="col-xs-12" style="padding-left: 0;">
        @for (var i = 0; i < ViewDataTyped.ProjectStages.Count; i++)
        {
            var stage = ViewDataTyped.ProjectStages[i];

            var isCurrentStage = stage == ViewDataTyped.Project.ProjectStage;

            var stateName = "default";
            if (isCurrentStage)
            {
                stateName = "current";
            }

            var arrowClass = "middleArrow";
            if (i == 0)
            {
                arrowClass = "firstArrow";
            }
            else if (i == ViewDataTyped.ProjectStages.Count - 1)
            {
                arrowClass = "lastArrow";
            }
            else if (i == 0 && ViewDataTyped.ProjectStages.Count == 0)
            {
                arrowClass = "singleArrow";
            }

            <div class="breadcrumbTitle arrow @Html.Raw(stateName) @Html.Raw(arrowClass)">@stage.ProjectStageDisplayName</div>
        }
    </div>
</div>
<div data-spy="scroll" data-target="#toc">
    <div id="contentForTOC" class="container-fluid">
        <div class="row">
            <div data-target="#tableofcontents" id="scrollSpyContent" class="col-lg-2 col-md-3 hidden-sm hidden-xs hidden-print">
                <div id="tableOfContentsAffixed" class="navpanel panelFirma">
                    <h4 data-toc-skip style="margin-top: 0">Contents</h4>
                    <nav id="tableOfContents" class="scrollSpy"></nav>
                </div>
            </div>
            <div class="col-sm-12 col-md-9 col-lg-10">
                <h2 class="sectionHeader">@FieldDefinition.Project.GetFieldDefinitionLabel() Overview</h2>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectUrl, string.Format("Edit {0}", ViewDataTyped.Project.DisplayName), 950, ViewDataTyped.UserHasEditProjectPermissions)
                                    Basics
                                </h3>
                            </div>
                            <div class="panel-body">
                                @{ ProjectBasics.RenderPartialView(Html, ViewDataTyped.ProjectBasicsViewData); }
                            </div>
                        </div>
                        @if (ViewDataTyped.ProjectAttributesViewData.ProjectCustomAttributeTypes.Any())
                        {
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>
                                        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectAttributesUrl, string.Format("Edit {0}", FieldDefinition.ProjectCustomAttribute.GetFieldDefinitionLabel()), 950, ViewDataTyped.UserHasEditProjectPermissions)
                                        @FieldDefinition.Project.FieldDefinitionDisplayName Attributes
                                    </h3>
                                </div>
                                <div class="panel-body">
                                    @{ ProjectAttributes.RenderPartialView(Html, ViewDataTyped.ProjectAttributesViewData); }
                                </div>
                            </div>
                        }

                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @if (ViewDataTyped.UserHasEditProjectPermissions)
                                {
                                    <a id="editLocationDropdownButton" href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true">
                                        <h3>
                                            @BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-edit")
                                            Location
                                            <span class="caret"></span>
                                        </h3>
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="editLocationDropdownButton" style="top: 36px; left: auto;">
                                        <li>@ModalDialogFormHelper.ModalDialogFormLink("Simple", ViewDataTyped.EditSimpleProjectLocationUrl, string.Format("Edit {0} - Simple", FieldDefinition.ProjectLocation.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.MapFormID)</li>
                                        <li>@ModalDialogFormHelper.ModalDialogFormLink("Detailed", ViewDataTyped.EditDetailedProjectLocationUrl, string.Format("Edit {0} - Detail", FieldDefinition.ProjectLocation.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.MapFormID)</li>

                                        <li>
                                            @ModalDialogFormHelper.ModalDialogFormLink("Priority Areas", ViewDataTyped.EditProjectPriorityAreaUrl, "Edit Priority Areas", 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.EditProjectPriorityAreaFormID)
                                        </li>
                                        <li>
                                            @ModalDialogFormHelper.ModalDialogFormLink("Regions", ViewDataTyped.EditProjectRegionUrl, "Edit Regions", 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.EditProjectRegionFormID)
                                        </li>

                                        <li>@ModalDialogFormHelper.ModalDialogFormLink("Map Extent", ViewDataTyped.EditProjectBoundingBoxUrl, string.Format("Edit {0} - Map Extent", FieldDefinition.ProjectLocation.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.EditProjectBoundingBoxFormID)</li>
                                    </ul>
                                }
                                else
                                {
                                    <h3>Location</h3>
                                }
                            </div>
                            <div class="panel-body">
                                @{ ProjectLocationSummary.RenderPartialView(Html, ViewDataTyped.ProjectLocationSummaryViewData); }
                            </div>
                        </div>
                        @if (ViewDataTyped.UserHasProjectAdminPermissions)
                        {
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>Tags</h3>
                                </div>
                                <div class="panel-body">
                                    @{ ProjectBasicsTags.RenderPartialView(Html, ViewDataTyped.ProjectBasicsTagsViewData); }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>
                            @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectOrganizationsUrl, "Edit Organizations", ViewDataTyped.UserHasEditProjectPermissions)
                            @FieldDefinition.Organization.GetFieldDefinitionLabelPluralized()
                        </h3>
                    </div>
                    <div class="panel-body">
                        @{ ProjectOrganizationsDetail.RenderPartialView(Html, ViewDataTyped.ProjectOrganizationsDetailViewData); }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>
                            @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectPeopleUrl, "Edit Contacts", ViewDataTyped.UserHasEditProjectPermissions)
                            @FieldDefinition.Contact.GetFieldDefinitionLabelPluralized()
                        </h3>
                    </div>
                    <div class="panel-body">
                        @{ ProjectPeopleDetail.RenderPartialView(Html, ViewDataTyped.ProjectPeopleDetailViewData); }
                    </div>
                </div>

                @*TODO Neutered Per WA DNR #1446. May decide to bring it back later

        <h2 class="sectionHeader">@MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h2>
        <div class="panel panelFirma">
            <div class="panel-heading panelTitle">
                <h3>
                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureExpectedsUrl, "Edit Expected " + MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasEditProjectPermissions)
                    Expected @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()
                </h3>
            </div>
            <div class="panel-body">
                @{ PerformanceMeasureExpectedSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureExpectedSummaryViewData); }
            </div>
        </div>
        <div class="panel panelFirma">
            <div class="panel-heading panelTitle">
                <h3>
                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureActualsUrl, "Edit Reported " + MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasPerformanceMeasureActualManagePermissions)
                    Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()
                </h3>
            </div>
            <div class="panel-body">
                @if (ViewDataTyped.Project.IsProposal())
                {
                    <p class="systemText">Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() are not relevant for @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() in the Proposal stage.</p>
                }
                else if (ViewDataTyped.Project.ProjectStage == ProjectStage.Planned)
                {
                    <p class="systemText">Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() are not relevant for @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() in the Planning/Design stage.</p>
                }
                else
                {
                    PerformanceMeasureReportedValuesGrouped.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureReportedValuesGroupedViewData);
                }
            </div>
        </div>*@

                <h2 class="sectionHeader">Funding</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>
                            @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditExpectedFundingUrl, "Edit Expected Funding", 1000, ViewDataTyped.UserHasEditProjectPermissions)
                            Expected Funding
                        </h3>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.EstimatedTotalCost)</label>
                            <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.EstimatedTotalCost.ToStringCurrency()</div>
                        </div>
                        <div class="row">
                            <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.SecuredFunding)</label>
                            <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.GetSecuredFunding().ToStringCurrency()</div>
                        </div>
                        <div class="row">
                            <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.UnfundedNeed)</label>
                            <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.UnfundedNeed().ToStringCurrency()</div>
                            @if (ViewDataTyped.Project.GetUnsecuredFunding() > 0)
                            {
                                <div class="col-sm-6">(@ViewDataTyped.Project.GetUnsecuredFunding().ToStringCurrency() identified as @Html.LabelWithSugarFor(FieldDefinition.UnsecuredFunding))</div>
                            }
                        </div>
                        <hr />
                        @{
                            ProjectFundingDetail.RenderPartialView(Html, ViewDataTyped.ProjectFundingDetailViewData);
                        }
                    </div>
                </div>

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>
                            @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditReportedExpendituresUrl, string.Format("Edit {0}", FieldDefinition.ReportedExpenditure.GetFieldDefinitionLabelPluralized()), 1000, ViewDataTyped.UserHasEditProjectPermissions)
                            @FieldDefinition.ReportedExpenditure.GetFieldDefinitionLabelPluralized()
                        </h3>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.Project.IsProposal())
                        {
                            <p>Reported Expenditures are not relevant for @FieldDefinition.Project.GetFieldDefinitionLabelPluralized() in the @FieldDefinition.Application.GetFieldDefinitionLabel() stage.</p>
                        }
                        else
                        {
                            ProjectExpendituresDetail.RenderPartialView(Html, ViewDataTyped.ProjectExpendituresDetailViewData);
                        }
                    </div>

                </div>

                <h2 class="sectionHeader">Activities</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3 data-toc-skip="true">
                            Activities
                        </h3>
                    </div>
                    <div class="panel-body">
                        @*<div class="row">
                            <div class="col-sm-6">
                                <h4>Contractor Time</h4>
                            </div>
                            <div class="col-sm-6 text-right">
                                @if (ViewDataTyped.UserHasEditProjectPermissions)
                                {<a class="btn btn-sm btn-firma" href="@ViewDataTyped.EditContractorTimeActivitiesUrl"><span class="glyphicon glyphicon-edit"></span> Edit</a>}
                            </div>
                        </div>
                        @if (ViewDataTyped.Project.ContractorTimeActivities.Any())
                        {
                            var contractorTimeActivities = ViewDataTyped.Project.ContractorTimeActivities.GroupBy(x => x.FundingSource).OrderBy(x => x.Key.DisplayName).ToList();
                            <div class="row">
                                <div class="col-sm-2"><strong>Staff Time Hours:</strong></div>
                                <div class="col-sm-2 text-right">
                                    <span>
                                        @ViewDataTyped.Project.GetTotalStaffTimeHours()
                                    </span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2"><strong>Total Cost:</strong></div>
                                <div class="col-sm-2 text-right">
                                    <span>
                                        @ViewDataTyped.Project.GetTotalStaffTimeAmount().ToStringCurrency()
                                    </span>
                                </div>
                            </div>
                            <br />
                            <table class="table table-striped table-condensed table-hover">
                                @foreach (var fundingSource in contractorTimeActivities)
                                {
                                    <tr>
                                        <th colspan="7">@FieldDefinition.FundingSource.GetFieldDefinitionLabel(): @fundingSource.Key.DisplayNameAsUrl</th>
                                    </tr>
                                    <tr>
                                        <th>Start Date</th>
                                        <th>End Date</th>
                                        <th class="text-right">Hours</th>
                                        <th class="text-right">Acreage</th>
                                        <th class="text-right">Rate</th>
                                        <th class="text-right">Total Amount</th>
                                    </tr>
                                    foreach (var contractorTimeActivity in fundingSource.OrderBy(x => x.ContractorTimeActivityStartDate))
                                    {
                                        <tr>
                                            <td>@contractorTimeActivity.ContractorTimeActivityStartDate.ToShortDateString()</td>
                                            <td>
                                                @if (contractorTimeActivity.ContractorTimeActivityEndDate != null)
                                                {
                                                    <text>@contractorTimeActivity.ContractorTimeActivityEndDate.Value.ToShortDateString()</text>
                                                }
                                                else
                                                {
                                                    <p class="systemText">N/A</p>
                                                }
                                            </td>
                                            <td class="text-right">@contractorTimeActivity.ContractorTimeActivityAcreage</td>
                                            <td class="text-right">@contractorTimeActivity.ContractorTimeActivityHours</td>
                                            <td class="text-right">@contractorTimeActivity.ContractorTimeActivityRate.ToStringCurrency()</td>
                                            <td class="text-right">@contractorTimeActivity.TotalAmount.ToStringCurrency()</td>
                                        </tr>
                                    }
                                }
                            </table>
                        }
                        else
                        {
                            <p class="systemText">No Contractor Time identified for this @FieldDefinition.Project.GetFieldDefinitionLabel().</p>
                        }
                        <hr />*@
                        <div class="row">
                            <div class="col-sm-6">
                                <h4>Treatments</h4>
                            </div>
                            <div class="col-sm-6 text-right">
                                @if (ViewDataTyped.UserHasEditProjectPermissions)
                                {
                                    @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0} Add Treatment", FirmaDhtmlxGridHtmlHelpers.PlusIcon), ViewDataTyped.EditTreatmentActivityUrl,"Add Treatment",new List<string>{ "btn","btn-sm","btn-firma"}, ViewDataTyped.UserHasEditProjectPermissions)
                                }
                            </div>
                        </div>

                        <br />

                        @if (ViewDataTyped.Project.TreatmentActivities.Any())
                        {
                            <div class="panel-body">
                                @Html.DhtmlxGrid(ViewDataTyped.TreatmentActivityProjectDetailGridSpec, ViewDataTyped.TreatmentActivityGridName, ViewDataTyped.TreatmentActivityGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                            </div>
                        }
                        else
                        {
                            <p class="systemText">No Treatments identified for this @FieldDefinition.Project.GetFieldDefinitionLabel().</p>
                        }
                    </div>
                </div>

                @foreach (var classificationSystem in ViewDataTyped.ClassificationSystems)
                {
                    <h2 data-toc-skip class="sectionHeader">@classificationSystem.ClassificationSystemNamePluralized</h2>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h2>
                                @ModalDialogFormHelper.MakeEditIconLink(classificationSystem.GetEditProjectClassificationsUrl(ViewDataTyped.Project), string.Format("Edit {0}", classificationSystem.ClassificationSystemNamePluralized), ViewDataTyped.UserHasEditProjectPermissions && classificationSystem.HasClassifications)
                                @Html.LabelWithSugarFor(classificationSystem, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly) @classificationSystem.ClassificationSystemNamePluralized
                            </h2>
                        </div>
                        <div class="panel-body">
                            @{ var projectClassifications = ViewDataTyped.Project.ProjectClassifications.Where(x => x.Classification.ClassificationSystemID == classificationSystem.ClassificationSystemID).ToList(); }
                            @if (projectClassifications.Count > 0)
                            {
                                foreach (var projectClassificationBatch in projectClassifications.OrderBy(x => x.Classification.ClassificationSortOrder).ThenBy(x => x.Classification.DisplayName).Batch(3))
                                {
                                    <div class="row" style="padding-top: 10px;">
                                        @foreach (var projectClassification in projectClassificationBatch)
                                        {
                                            <div class="col-md-4">
                                                <label>@projectClassification.Classification.GetDisplayNameAsUrl()</label>

                                                <div>@projectClassification.ProjectClassificationNotes</div>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="systemText">No @classificationSystem.ClassificationSystemNamePluralized set for this @FieldDefinition.Project.GetFieldDefinitionLabel().</p>
                            }
                        </div>
                    </div>

                }

                <h2 class="sectionHeader">@FieldDefinition.Project.GetFieldDefinitionLabel() Details</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>Documents</h3>
                    </div>
                    <div class="panel-body">
                        @{ ProjectDocumentsDetail.RenderPartialView(Html, ViewDataTyped.ProjectDocumentsDetailViewData); }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>Notes</h3>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.UserHasEditProjectPermissions)
                        {
                            <strong>Public Notes</strong>
                        }
                        @{ EntityNotes.RenderPartialView(Html, ViewDataTyped.ProjectNotesViewData); }
                        @if (ViewDataTyped.UserHasEditProjectPermissions)
                        {
                            <hr />
                            <strong>Internal Notes</strong>
                            EntityNotes.RenderPartialView(Html, ViewDataTyped.InternalNotesViewData);
                        }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>
                            @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditExternalLinksUrl, string.Format("Edit {0}", FieldDefinition.ExternalLinks.GetFieldDefinitionLabelPluralized()), ViewDataTyped.UserHasEditProjectPermissions)
                            @Html.LabelWithSugarFor(FieldDefinition.ExternalLinks, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly) @FieldDefinition.ExternalLinks.FieldDefinitionDisplayName
                        </h3>
                    </div>
                    <div class="panel-body">
                        @{ EntityExternalLinks.RenderPartialView(Html, ViewDataTyped.EntityExternalLinksViewData); }
                    </div>
                </div>

                <h2 data-toc-skip class="sectionHeader">Photos</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Photos</h2>
                    </div>
                    <div class="panel-body">
                        @{
                            ImageGallery.RenderPartialView(Html, ViewDataTyped.ImageGalleryViewData);
                        }
                    </div>
                </div>

                @if (ViewDataTyped.UserHasProjectAdminPermissions)
                {
                    <h2 class="sectionHeader">Administrative</h2>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>@FieldDefinition.Project.GetFieldDefinitionLabel() Update History</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.ProjectUpdateBatchGridSpec, ViewDataTyped.ProjectUpdateBatchGridName, ViewDataTyped.ProjectUpdateBatchGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>System Communications</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.ProjectNotificationGridSpec, ViewDataTyped.ProjectNotificationGridName, ViewDataTyped.ProjectNotificationGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>Audit Log</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.AuditLogsGridSpec, ViewDataTyped.AuditLogsGridName, ViewDataTyped.AuditLogsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    jQuery(document)
        .ready(function () {
            Toc.init({
                $nav: jQuery('#tableOfContents'),
                $scope: jQuery('#contentForTOC')
            });

            jQuery('body').scrollspy({
                target: '#tableOfContents'
            });

            jQuery('#tableOfContentsAffixed')
                .affix({
                    offset: {
                        top: function () { return (this.top = jQuery("#tableOfContentsAffixed").offset().top); },
                        bottom: function () { return (this.bottom = jQuery('footer').outerHeight(true) + 100); }
                    }
                });
        });
</script>

