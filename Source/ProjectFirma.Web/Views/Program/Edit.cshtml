@*-----------------------------------------------------------------------
<copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Mvc
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Vendor
@inherits ProjectFirma.Web.Views.Program.Edit
@using (Html.BeginForm())
{

<div class="form-horizontal">
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProgramName)
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.ProgramName, new { @class = "form-control", style = "width:100%" })
            @Html.ValidationMessageFor(m => m.ProgramName)

        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProgramShortName)
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.ProgramShortName, new { @class = "form-control", style = "width:100%" })
            @Html.ValidationMessageFor(m => m.ProgramShortName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.OrganizationID)
        </div>
        <div class="col-sm-9">
            @if (ViewDataTyped.Organization != null)
            {
                @ViewDataTyped.Organization.DisplayName
                @Html.HiddenFor(x => x.OrganizationID)
            }
            else
            {
                @Html.DropDownListFor(m => m.OrganizationID, ViewDataTyped.Organizations, new { @class = "form-control", style = "width:100%" })
                @Html.ValidationMessageFor(m => m.OrganizationID)
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.PrimaryContactPersonID)
        </div>
        <div class="col-sm-9">
            @Html.SearchableDropDownListFor(m => m.PrimaryContactPersonID, ViewDataTyped.People)
            @Html.ValidationMessageFor(m => m.PrimaryContactPersonID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.IsActive)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.IsActive)
            @Html.ValidationMessageFor(m => m.IsActive)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.IsDefaultForBulkImportOnly)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.IsDefaultForBulkImportOnly)
            @Html.ValidationMessageFor(m => m.IsDefaultForBulkImportOnly)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProgramNotes)
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.ProgramNotes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ProgramNotes)
        </div>
    </div>
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ProgramFileResourceData)
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(x => x.ProgramFileResourceData)
            @*<span class="smallExplanationText">
                    Allowed Extensions: @Model.GetFileExtensions(x => x.LogoFileResourceData)
                </span>*@
            @Html.ValidationMessageFor(x => x.ProgramFileResourceData)
        </div>
    </div>

    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ProgramExampleFileResourceData)
        </div>
        <div class="col-sm-9">
            @Html.EditorFor(x => x.ProgramExampleFileResourceData)
            @*<span class="smallExplanationText">
                    Allowed Extensions: @Model.GetFileExtensions(x => x.LogoFileResourceData)
                </span>*@
            @Html.ValidationMessageFor(x => x.ProgramExampleFileResourceData)
        </div>
    </div>

</div>
    @Html.HiddenFor(m => m.ProgramID)

}


<script type="text/javascript">
    jQuery(document).ready(function ()
    {
        HookupCheckIfFormIsDirty(undefined, ".submitProject");

        function setName(isFirstLoad) {
            var isChecked = jQuery("#@Html.IdFor(x => x.IsDefaultForBulkImportOnly)").prop('checked');
            if (isChecked) {
                jQuery("#@Html.IdFor(x => x.ProgramName)").prop('disabled', true);
                jQuery("#@Html.IdFor(x => x.ProgramName)").text('(default)');
                jQuery("#@Html.IdFor(x => x.ProgramName)").val('(default)');
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").prop('disabled', true);
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").text('');
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").val('');
            } else if(!isFirstLoad) {
                jQuery("#@Html.IdFor(x => x.ProgramName)").prop('disabled', false);
                jQuery("#@Html.IdFor(x => x.ProgramName)").text('');
                jQuery("#@Html.IdFor(x => x.ProgramName)").val('');
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").prop('disabled', false);
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").text('');
                jQuery("#@Html.IdFor(x => x.ProgramShortName)").val('');
            }
        }

        setName(true);

        jQuery("#@Html.IdFor(x => x.IsDefaultForBulkImportOnly)").on("change", function() {
            setName(false);
        });
    });
</script>
