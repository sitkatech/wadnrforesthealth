@*-----------------------------------------------------------------------
<copyright file="EditImportBasics.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Mvc
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Vendor
@inherits ProjectFirma.Web.Views.Program.EditImportBasics


@using (Html.BeginForm())
{

<div class="form-horizontal">
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProjectTypeDefaultName)
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.ProjectTypeDefaultName, new { @class = "form-control", style = "width:100%" })
            @Html.ValidationMessageFor(m => m.ProjectTypeDefaultName)

        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.TreatmentTypeDefaultName)
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.TreatmentTypeDefaultName, new { @class = "form-control", style = "width:100%" })
            @Html.ValidationMessageFor(m => m.TreatmentTypeDefaultName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ImportIsFlattened)
            <p class="smallExplanationText">*Note: If this value is changed, mapping data that is dependent on the import being flattened or not will be removed.</p>
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ImportIsFlattened)
            <p class="smallExplanationText">If Import IS Flattened, the source data has 1 row per project being imported. <br/>If the Import is NOT Flattened, that means there is 1 row per treatment being imported.</p>
            @Html.ValidationMessageFor(m => m.ImportIsFlattened)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.AdjustProjectTypeBasedOnTreatmentTypes)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.AdjustProjectTypeBasedOnTreatmentTypes)
            @Html.ValidationMessageFor(m => m.AdjustProjectTypeBasedOnTreatmentTypes)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProjectStageDefaultID)
        </div>
        <div class="col-sm-9">
            @Html.DropDownListFor(m => m.ProjectStageDefaultID, ViewDataTyped.ProjectStageSelectListItems, new { @class = "form-control", style = "width:auto" })
            @Html.ValidationMessageFor(m => m.ProjectStageDefaultID)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.DataDeriveProjectStage)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.DataDeriveProjectStage)
            @Html.ValidationMessageFor(m => m.DataDeriveProjectStage)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.DefaultLeadImplementerOrganizationID)
        </div>
        <div class="col-sm-9">
            @Html.DropDownListFor(m => m.DefaultLeadImplementerOrganizationID, ViewDataTyped.Organizations, new { @class = "form-control", style = "width:auto" })
            @Html.ValidationMessageFor(m => m.DefaultLeadImplementerOrganizationID)
        </div>
    </div>
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ImportAsDetailedLocationInsteadOfTreatments)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ImportAsDetailedLocationInsteadOfTreatments)
            @Html.ValidationMessageFor(m => m.ImportAsDetailedLocationInsteadOfTreatments)
        </div>
    </div>
    
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ImportAsDetailedLocationInAdditionToTreatments)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ImportAsDetailedLocationInAdditionToTreatments)
            @Html.ValidationMessageFor(m => m.ImportAsDetailedLocationInAdditionToTreatments)
        </div>
    </div>

    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ProjectDescriptionDefaultText)
        </div>
        <div class="col-sm-9">
            @Html.TextAreaWithMaxLengthFor(x => x.ProjectDescriptionDefaultText, new TextAreaForExtensions.TextAreaDimensions(null, 4), string.Empty, new List<string>() { "form-control" })
            @Html.ValidationMessageFor(x => x.ProjectDescriptionDefaultText)
        </div>
    </div>
    
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ApplyStartDateToProject)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ApplyStartDateToProject)
            @Html.ValidationMessageFor(m => m.ApplyStartDateToProject)
        </div>
    </div>
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ApplyCompletedDateToProject)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ApplyCompletedDateToProject)
            @Html.ValidationMessageFor(m => m.ApplyCompletedDateToProject)
        </div>
    </div>
    
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ApplyStartDateToTreatments)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ApplyStartDateToTreatments)
            @Html.ValidationMessageFor(m => m.ApplyStartDateToTreatments)
        </div>
    </div>
    <div class="form-group form-group-tight">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(x => x.ApplyEndDateToTreatments)
        </div>
        <div class="col-sm-9">
            @Html.CheckBoxFor(m => m.ApplyEndDateToTreatments)
            @Html.ValidationMessageFor(m => m.ApplyEndDateToTreatments)
        </div>
    </div>



</div>
    @Html.HiddenFor(m => m.GisUploadSourceOrganizationID)

}



