@*-----------------------------------------------------------------------
    <copyright file="ManageFindYourForester.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.AgGridWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.FindYourForester.FindYourForester
@section JavascriptAndStylesContent
{
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    
    <style>
        .popover > .arrow {
            border-width:0;
        }
    </style>

}

<div>
    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <fieldset style="border-bottom: 1px solid #e5e5e5; padding-bottom: 5px;">
                <legend style="font-size: 14px; font-weight: bold; margin-bottom: 5px;">Zoom Map to Zip Code or Mailing Address with Zip Code</legend>
                <label for="txtZoomAddress">Street address, City, and State</label>
                <input id="txtZoomAddress" type="text" style="width: 320px; margin-right: 10px;" placeholder="123 Main St. SE, Olympia, WA" />
                <label for="txtZoomZip">Zip Code</label>
                <input id="txtZoomZip" type="text" style="width: 80px;" placeholder="12345" />
                <button id="btnZoomToAddress">
                    Zoom to Address
                </button>
                <span style="display:none; color: red;" id="errZoomNoZipCode">Please provide a zip code for zooming the Find Your Forester Map.</span>
            </fieldset>
        </div>
        <div id="outOfStateAddressError" class="col-md-12 alert alert-danger" style="display: none;">There was a problem finding your address. Either the request failed or you selected a location outside the State of Washington. Try hitting Find Your Forester again or update your selection to be inside the State of Washington</div>
    </div>
    <div class="row">
        <div class="col-md-8">

            <div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 400px; margin: 5px 0 5px 0">
            </div>
            <p style="font-size: 10px">To zoom, hold down Shift and drag a rectangle.</p>

        </div>
        <div class="col-md-4" style="padding-left: 0; padding-right: 0;">
            <div class="panel panel-default" style="height: 400px; margin: 5px 0 5px 0">
                <div class="panel-heading"><strong>Forester Contact Information:</strong></div>
                <div id="findYourForesterContainer" class="panel-body" style="max-height: 359px; overflow-y: scroll; ">

                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h3>I have a question about...</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            
            
            <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">

                @foreach (var question in ViewDataTyped.RootQuestions)
                {

                    @OutputQuestion(question)

                }

            </div>


        </div>
    </div>
</div>

<script type="text/javascript">

    function showHideFyfSidebarContent() {
        var hiddenChildren = jQuery('#findYourForesterContainer > div > span').filter(':hidden');
        if (hiddenChildren.length) {
            jQuery('#findYourForesterContainer > div > span').slice(6).show();
            jQuery('#showHideFindYourForesterContent').html("see less");
        } else {
            jQuery('#findYourForesterContainer > div > span').slice(6).hide();
            jQuery('#showHideFindYourForesterContent').html("see more");
        }
    }


    jQuery(function () {

        

        var findYourForesterFirmaMap = null;
        var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None));
        if (!findYourForesterFirmaMap) {

            findYourForesterFirmaMap = new ProjectFirmaMaps.Map(mapInitJson, null);
        }

        findYourForesterFirmaMap.map.on('click', function (evt) {

            populateForesterInformationAndDropMarker(evt.latlng, true);
        });

        var geocodeMarker = L.marker();


        function populateForesterInformationAndDropMarker(latlng, failRetry) {
            
            if (geocodeMarker != undefined) {
                geocodeMarker.remove();
            };

            //Add a marker to show where you clicked.
            geocodeMarker = L.marker(latlng).addTo(findYourForesterFirmaMap.map);

            var ajaxCalls = findYourForesterFirmaMap.popupForWMSAndVectorLayers(findYourForesterFirmaMap.getWmsLayers(false), findYourForesterFirmaMap.getVectorLayers(false), latlng);
            findYourForesterFirmaMap.carryOutPromises(ajaxCalls).then(results => {
                jQuery('#outOfStateAddressError').hide();
                jQuery('[data-forester-info-field]').text("");
                if (!results.every(element => element === null))
                {
                    results.forEach(result => {
                        if (result) {
                            var foresterDefinitionList = jQuery('[data-forester-role-id="' + result.properties.ForesterRoleID + '"]');
                            //check we have some data before updating
                            if (result && result.properties && result.properties.FirstName) {
                                foresterDefinitionList.find('[data-forester-name]').text(result.properties.FirstName + " " + result.properties.LastName);
                                if (result.properties.Email) {
                                    foresterDefinitionList.find('[data-forester-email]').text(result.properties.Email);
                                } else {
                                    foresterDefinitionList.find('[data-forester-email]').text("No email available");
                                }
                                if (result.properties.Phone) {
                                    foresterDefinitionList.find('[data-forester-phone]').text(result.properties.Phone);
                                } else {
                                    foresterDefinitionList.find('[data-forester-phone]').text("No phone number available");
                                }

                                foresterDefinitionList.find('[data-forester-container]').show();
                                foresterDefinitionList.find('[data-forester-no-data]').hide();
                                foresterDefinitionList.find('[data-forester-initial]').hide();
                            } else {
                                foresterDefinitionList.find('[data-forester-name]').text("");
                                foresterDefinitionList.find('[data-forester-email]').text("");
                                foresterDefinitionList.find('[data-forester-phone]').text("");
                                foresterDefinitionList.find('[data-forester-container]').hide();
                                foresterDefinitionList.find('[data-forester-no-data]').show();
                                foresterDefinitionList.find('[data-forester-initial]').hide();
                            }

                        } 
                            
                    });
                } else {
                    if (failRetry) {
                        populateForesterInformationAndDropMarker(latlng, false);
                    } else {
                        var allForesterDefinitionLists = jQuery('[data-forester-role-id]');
                        jQuery('#outOfStateAddressError').show();
                        allForesterDefinitionLists.find('[data-forester-name]').text("");
                        allForesterDefinitionLists.find('[data-forester-email]').text("");
                        allForesterDefinitionLists.find('[data-forester-phone]').text("");
                        allForesterDefinitionLists.find('[data-forester-container]').hide();
                        allForesterDefinitionLists.find('[data-forester-no-data]').show();
                        allForesterDefinitionLists.find('[data-forester-initial]').hide();
                    }
                }

                if (jQuery('#findYourForesterContainer > div > span').length > 6) {
                    jQuery('#findYourForesterContainer > div > span').eq(5).after('<br/><button id="showHideFindYourForesterContent" onclick="showHideFyfSidebarContent();">see more</button>');
                    jQuery('#findYourForesterContainer > div > span').slice(6).hide();

                }
                   
            });

        }


        //zoom to address
        jQuery('#btnZoomToAddress').on("click", function() {


            var dataAddress = jQuery('#txtZoomAddress').val();
            var dataZip = jQuery('#txtZoomZip').val();

            if (dataZip.trim().length === 0) {
                jQuery('#errZoomNoZipCode').show();
            } else {

                jQuery('#errZoomNoZipCode').hide();
                $.ajax({
                        method: "POST",
                        url: "@ViewDataTyped.GeocodeAddressUrl",
                        data: { address: dataAddress, zip: dataZip }
                    })
                    .done(function (msg) {
                        if (!msg.ErrorStatus) {

                            findYourForesterFirmaMap.map.flyTo([msg.Lat, msg.Long], 12, {duration: 1});
                            window.setTimeout(populateForesterInformationAndDropMarker({ lng: msg.Long, lat: msg.Lat }, true), 1250);

                        } else {
                            console.log(msg.ErrorStatus);
                            alert(msg.ErrorStatus);
                        }

                    });
            }

        });
    });
</script>




@helper OutputQuestion(FindYourForesterQuestion question)
{

    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">

        <div class="panel panel-default">
            <div class="panel-heading" role="tab" id="@Html.Raw("heading" + question.FindYourForesterQuestionID)">
                <h4 class="panel-title">
                    <a a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="@Html.Raw("#collapse" + question.FindYourForesterQuestionID)" aria-expanded="true" aria-controls="@Html.Raw("collapse" + question.FindYourForesterQuestionID)">
                        @question.QuestionText
                    </a>
                </h4>
            </div>
            <div id="@Html.Raw("collapse" + question.FindYourForesterQuestionID)" class="panel-collapse collapse" role="tabpanel" aria-labelledby="@Html.Raw("heading" + question.FindYourForesterQuestionID)">
                <div class="panel-body">
                    @if (question.FindYourForesterQuestionsWhereYouAreTheParentQuestion.Any())
                    {
                        foreach (var childQuestion in question.FindYourForesterQuestionsWhereYouAreTheParentQuestion)
                        {
                            @OutputQuestion(childQuestion)
                        }
                    }
                    else
                    {
                        if (question.ForesterRoleID.HasValue)
                        {
                            
                            <div data-forester-role-id="@question.ForesterRoleID">
                                <div>
                                    @{
                                        var fieldDef = question.ForesterRole.GetFieldDefinition();
                                    }

                                    <strong>Role:</strong>
                                    <span>@question.ForesterRole.ForesterRoleDisplayName @(fieldDef != null ? Html.LabelWithSugarFor(fieldDef, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly) : MvcHtmlString.Empty)</span>
                                </div>
                                <div data-forester-container="" style="display: none;">
                                    <strong>Name:</strong>
                                    <span data-forester-name=""  data-forester-info-field=""> </span>
                                </div>
                                <div data-forester-container="" style="display: none;">
                                    <strong>Email:</strong>
                                    <span data-forester-email=""  data-forester-info-field=""> </span>
                                </div>
                                <div data-forester-container="" style="display: none;">
                                    <strong>Phone:</strong>
                                    <span data-forester-phone=""  data-forester-info-field=""> </span>
                                </div>
                                <div data-forester-initial="" style="display: block;">
                                    <p>Please enter your address or place a marker on the map to get Forester contact info for the @question.ForesterRole.ForesterRoleDisplayName in your area.</p>
                                </div>
                                <div data-forester-no-data="" style="display: none;">
                                    <p>The @question.ForesterRole.ForesterRoleDisplayName role is unassigned for the region you selected.</p>
                                </div>
                            </div>                                                     

                        }

                        if (!string.IsNullOrEmpty(question.ResultsBonusContent))
                        {

                            @question.ResultsBonusContentHtmlString
                        }

                    }
                </div>
            </div>
        </div>
  

    </div>

}