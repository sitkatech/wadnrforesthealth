@*-----------------------------------------------------------------------
    <copyright file="GrantIndex.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.AgGridWrappers
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Grant
@inherits ProjectFirma.Web.Views.Grant.GrantIndex

@section JavascriptAndStylesContent
{
    @{ AgGridIncludes.RenderPartialView(Html); }
}


<div style="padding-top: 10px;">
    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
</div>

<div style="margin-top: 10px">

    @* Grant Grid *@
    <h3>@FieldDefinition.Grant.GetFieldDefinitionLabelPluralized()</h3>
    @Html.AgGrid(ViewDataTyped.GrantGridSpec, ViewDataTyped.GrantGridName, ViewDataTyped.GrantGridDataUrl, null, AgGridResizeType.VerticalResizableHorizontalAutoFit)

    <br />

    @* Grant Allocation Grid *@
    <h3>@FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized()</h3>
    <div id="grantAllocationGridAlertBox" class="alert alert-info" role="alert" style="display: none;"></div>
    <div id="grantAllocationGridWithData">
        @Html.AgGrid(ViewDataTyped.GrantAllocationGridSpec, ViewDataTyped.GrantAllocationGridName, ViewDataTyped.GrantAllocationGridDataUrl, null, AgGridResizeType.VerticalFillHorizontalAutoFit)
    </div>


    <script>

        document.addEventListener("DOMContentLoaded", () => {

            @(ViewDataTyped.GrantGridName)GridOptionsApi.addEventListener('selectionChanged', onGrantGridRowSelection);

        });

        function onGrantGridRowSelection() {
            jQuery("#grantAllocationGridAlertBox").hide();

            const selectedRows = @(ViewDataTyped.GrantGridName)GridOptionsApi.getSelectedRows();

            if (selectedRows.length > 0) {

                @(ViewDataTyped.GrantAllocationGridName)GridOptionsApi.setColumnFilterModel('@FieldDefinition.GrantNumber.GetFieldDefinitionLabel().ToStringSpecialForJavascript()',
                    selectedRows.map(row => row.@(GrantGridSpec.GrantNumberHiddenColumnName)));

                //console.log(@(ViewDataTyped.GrantAllocationGridName)GridOptionsApi.getColumnFilterModel('@FieldDefinition.GrantNumber.FieldDefinitionName'));

                if (!@(ViewDataTyped.GrantAllocationGridName)GridOptionsApi.getColumnFilterModel('@FieldDefinition.GrantNumber.GetFieldDefinitionLabel().ToStringSpecialForJavascript()')) {
                    jQuery("#grantAllocationGridAlertBox").text("No @FieldDefinition.GrantNumber.GetFieldDefinitionLabel() matches your selection of '" + selectedRows.map(row => row.@(GrantGridSpec.GrantNumberHiddenColumnName)).join(',') + "' in the @FieldDefinition.GrantAllocation.GetFieldDefinitionLabel() Grid");
                    jQuery("#grantAllocationGridAlertBox").show();
                }

            } else {
                @(ViewDataTyped.GrantAllocationGridName)GridOptionsApi.setColumnFilterModel('@FieldDefinition.GrantNumber.GetFieldDefinitionLabel().ToStringSpecialForJavascript()', null);
            }

            // Tell grid to run filter operation again
            @(ViewDataTyped.GrantAllocationGridName)GridOptionsApi.onFilterChanged();

        }
    </script>
</div>

