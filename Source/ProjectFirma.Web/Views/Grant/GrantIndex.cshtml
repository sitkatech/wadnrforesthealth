@*-----------------------------------------------------------------------
    <copyright file="GrantIndex.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.BootstrapWrappers
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Project
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.DhtmlWrappers
@using ProjectFirma.Web.Views.Grant
@using ProjectFirma.Web.Views.ProjectCreate
@inherits ProjectFirma.Web.Views.Grant.GrantIndex

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
}


<div style="padding-top: 10px;">
    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
</div>

<div style="margin-top: 10px">
    
    @* Grant Grid *@
    <h3>Grants</h3>
    @Html.DhtmlxGrid(ViewDataTyped.GrantGridSpec, ViewDataTyped.GrantGridName, ViewDataTyped.GrantGridDataUrl, "height:255px;", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)

    <br />

    @* Grant Allocation Grid *@
    <h3>Grant Allocations</h3>
    <div id="grantAllocationGridWithData">
        @Html.DhtmlxGrid(ViewDataTyped.GrantAllocationGridSpec, ViewDataTyped.GrantAllocationGridName, ViewDataTyped.GrantAllocationGridDataUrl, null, DhtmlxGridResizeType.VerticalFillHorizontalAutoFit)
    </div>
    <div id="grantAllocationGridWithoutDataForNoGrantFilterResults">
        @Html.DhtmlxGrid(ViewDataTyped.GrantAllocationNoDataGridSpec, ViewDataTyped.GrantAllocationNoDataGridName, ViewDataTyped.GrantAllocationNoDataGridDataUrl, null, DhtmlxGridResizeType.VerticalFillHorizontalAutoFit)
    </div>
</div>

<script type="text/javascript">
    // <![CDATA[
    var displayEmptyGrid = false;
    jQuery(document).ready(function()
    {
        //console.log('jQuery Document Ready');
        var grantGrid = Sitka.@ViewDataTyped.GrantGridName;
        
        // Get current selected grant number from Parent grid for a given rowId
        function getCurrentSelectedGrantNumberInParentGrid(rowId)
        {
            //console.log('getCurrentSelectedGrantNumberInParentGrid('+ rowId +')');
            var grantNumberColumnIndexForParentGrantGrid = grantGrid.getColumnIndexByName('@GrantGridSpec.GrantNumberHiddenColumnName');
            var currentSelectedGrantNumberInParentGrantGrid = grantGrid.grid.cells(rowId, grantNumberColumnIndexForParentGrantGrid).getValue();
            //console.log('grantNumberColumnIndexForParentGrantGrid: ' + grantNumberColumnIndexForParentGrantGrid);
            //console.log('currentSelectedGrantNumberInParentGrantGrid: ' + currentSelectedGrantNumberInParentGrantGrid);
            return currentSelectedGrantNumberInParentGrantGrid;
        }

        // Select given grant number in the Child grid
        function selectGivenGrantNumberFilterInChildGrid(currentSelectedGrantNumberInParentGrantGrid)
        {
            //console.log('selectGivenGrantNumberFilterInChildGrid(' + currentSelectedGrantNumberInParentGrantGrid + ')');
            var grantAllocationGrid = Sitka.@ViewDataTyped.GrantAllocationGridName;
            var grantNumberColumnIndexForChildGrantGrid = grantAllocationGrid.getColumnIndexByName('@ProjectFirma.Web.Models.FieldDefinition.GrantNumber.FieldDefinitionName');
            //console.log('Grant allocation child grid grant column index: ' + grantNumberColumnIndexForChildGrantGrid);
            var grantNumberFilterForChildGrantGrid = grantAllocationGrid.grid.getFilterElement(grantNumberColumnIndexForChildGrantGrid);
            //console.log('Got filter element for child grantNumberColumnIndex: ' + grantNumberColumnIndexForChildGrantGrid);
            //console.log('Filter element for child grantNumberColumnIndex: ' + grantNumberFilterForChildGrantGrid);
            grantNumberFilterForChildGrantGrid.value = currentSelectedGrantNumberInParentGrantGrid;
            // This conditional block is used to show/hide a grid with "no results" versus a grid that is filtered to available results
            if (grantNumberFilterForChildGrantGrid.value === '') {
                jQuery("#grantAllocationGridWithData").hide();
                jQuery("#grantAllocationGridWithoutDataForNoGrantFilterResults").show();
            }
            else
            {
                jQuery("#grantAllocationGridWithoutDataForNoGrantFilterResults").hide();
                jQuery("#grantAllocationGridWithData").show();
            }
            //console.log(grantNumberFilterForChildGrantGrid.value === '' ? 'empty string' : grantNumberFilterForChildGrantGrid.value);
            grantAllocationGrid.grid.filterByAll();

            //console.log('grantGrid onRowSelect - exiting');
        }

        grantGrid.grid.attachEvent("onRowSelect", function (rowId)
        {
            //console.log('grantGrid - onRowSelect - RowID: ' + rowId);
            var currentSelectedGrantNumberInParentGrid = getCurrentSelectedGrantNumberInParentGrid(rowId);
            selectGivenGrantNumberFilterInChildGrid(currentSelectedGrantNumberInParentGrid);
        });
        grantGrid.grid.attachEvent("onXLE", function() { grantGrid.grid.selectRow(0, true); });
        grantGrid.grid.attachEvent("onFilterEnd", function() { grantGrid.grid.selectRow(0, true); });
    });
    // ]]>

</script>