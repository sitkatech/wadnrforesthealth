@*-----------------------------------------------------------------------
    <copyright file="SiteLayout.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.GisProjectBulkUpdate
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.ModalDialog
@inherits SiteLayout

@{
    SetLayout("~/Views/Shared/SiteLayout.cshtml", ViewDataTyped);
}

@section JavascriptAndStylesContent
{
    <script type="text/javascript">
        jQuery(document).ready(function () {
            jQuery(".workflowSectionGroup").not(".active").not(" #instructions").on("click",function (event) {
                if (jQuery(this).hasClass("expanded")) {
                    if (!jQuery(event.target).is('a')) {
                        jQuery(this).removeClass("expanded");
                        jQuery(this).addClass("collapsed")
                        jQuery(this).children("ul").addClass("collapsed");
                        jQuery(this).children("ul").removeClass("expanded");

                    }
                }
                else {
                    jQuery(this).addClass("expanded");
                    jQuery(this).removeClass("collapsed");
                    jQuery(this).children("ul").removeClass("collapsed");
                    jQuery(this).children("ul").addClass("expanded");
                }
            }
            );
        })
    </script>

    <style>
        hr {
            border-top: 1px solid #ddd;
        }

        .moreActionsToggle .open > .moreActionsToggle .dropdown-toggle {
            color: #3e72b0 !important;
        }


        .moreActionsToggle ul.dropdown-menu.moreActionsToggle li a,
        .moreActionsToggle ul.dropdown-menu.moreActionsToggle li a:hover {
            color: #3e72b0;
        }

        .moreActionsToggle .btn.dropdown-toggle {
            border: none;
            color: #3e72b0;
        }

        .glyphicon-chevron-down {
            margin-left: 7px;
            margin-top: 7px;
        }
    </style>

    @RenderSection("JavascriptAndStylesContent", false)
}

@section RightOfPageTitle{
    <div class="dropdown moreActionsToggle">
        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            See more Actions
            <span class="glyphicon glyphicon-chevron-down"></span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
            <li>
                @ModalDialogFormHelper.ModalDialogFormLink("<span class='glyphicon glyphicon-comment'></span> Provide Feedback", ViewDataTyped.ProvideFeedbackUrl, "Provide Feedback", 800, "Submit Request", "Cancel", new List<string>(), null, null)
            </li>
           
            @if (ViewDataTyped.CurrentPersonCanWithdraw && ViewDataTyped.GisUploadAttempt != null)
            {
                <li>
                    @ModalDialogFormHelper.ModalDialogFormLink("Withdraw this GIS Upload Attempt", ViewDataTyped.WithdrawUrl, "Withdraw GIS Upload Attempt", 500, "Withdraw", "Cancel", new List<string>(), null, null)
                </li>
            }
        </ul>
    </div>
}

@if (!Html.ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary("The page could not be saved because there were errors that need to be corrected:", new { @class = "validation-summary-errors" })
}

@if (!ViewDataTyped.GisUploadAttemptStateIsValidInWizard && ViewDataTyped.GisUploadAttempt != null)
{
    <div class="alert alert-info" style="margin-bottom: 10px">
        <span>This GIS Upload Attempt has been approved and can no longer be edited through this wizard.</span>
    </div>
}

<div id="projectWizardContent" class="row">
    <div class="col-xs-12 col-sm-4 col-md-3" style="padding-right: 0;">
        <nav id="wizardNav">
            <ul class="nav nav-stacked">
                <li class="@(ViewDataTyped.IsInstructionsPage ? "active" : null) workflowSectionGroup" id="instructions">
                    <a href="@ViewDataTyped.InstructionsPageUrl"
                       style="display: block;">
                        <span class="workflowStatusPlaceholder"></span>
                        Instructions
                    </a>
                </li>
                @foreach (var gisUploadAttemptWorkflowSectionGrouping in ViewDataTyped.GisUploadAttemptWorkflowSectionGroupings.OrderBy(x => x.SortOrder))

                {
                    var gisUploadAttemptWorkflowSectionsForGroup = gisUploadAttemptWorkflowSectionGrouping.GetGisUploadAttemptWorkflowSections(ViewDataTyped.GisUploadAttempt, false);
                    if (gisUploadAttemptWorkflowSectionsForGroup.Any())
                    {
                        var isGroupingActive = gisUploadAttemptWorkflowSectionsForGroup.Any(x => x.SectionDisplayName.Equals(ViewDataTyped.CurrentSectionDisplayName, StringComparison.InvariantCultureIgnoreCase));
                        var groupingHasCompletionStatus = gisUploadAttemptWorkflowSectionsForGroup.Any(x => x.HasCompletionStatus);
                        <li class="@(isGroupingActive ? "active" : "collapsed") workflowSectionGroup">
                            @if (groupingHasCompletionStatus)
                            {
                                if (gisUploadAttemptWorkflowSectionsForGroup.All(x => !x.HasCompletionStatus || x.IsComplete))
                                {
                                    <span class="glyphicon glyphicon-ok field-validation-success text-left workflowStatusIndicator"></span>
                                }
                                else
                                {
                                    <span class="glyphicon glyphicon-exclamation-sign field-validation-warning text-left workflowStatusIndicator"></span>
                                }
                            }
                            else
                            {
                                <span class="workflowStatusPlaceholder"></span>
                            }
                            <span>@gisUploadAttemptWorkflowSectionGrouping.GisUploadAttemptWorkflowSectionGroupingDisplayName</span>
                            <ul class="@(!isGroupingActive ? "collapsed" : null)">
                                @foreach (var gisUploadAttemptWorkflowSectionSimple in gisUploadAttemptWorkflowSectionsForGroup)
                                {
                                    <li class="@(ViewDataTyped.CurrentSectionDisplayName.Equals(gisUploadAttemptWorkflowSectionSimple.SectionDisplayName, StringComparison.InvariantCultureIgnoreCase) ? "active" : null) workflowSection">
                                        <a href="@(gisUploadAttemptWorkflowSectionSimple.SectionUrl)"
                                           class="@(string.IsNullOrWhiteSpace(gisUploadAttemptWorkflowSectionSimple.SectionUrl) ? "disabled" : "")">
                                            <span style="display: inline-block; width: 15%; vertical-align: top">
                                                @if (gisUploadAttemptWorkflowSectionSimple.HasCompletionStatus && gisUploadAttemptWorkflowSectionSimple.SectionUrl != null)
                                                {
                                                    if (gisUploadAttemptWorkflowSectionSimple.IsComplete)
                                                    {
                                                        <span class="glyphicon glyphicon-ok field-validation-success text-left workflowStatusIndicator"></span>
                                                    }
                                                    else
                                                    {
                                                        <span class="glyphicon glyphicon-exclamation-sign field-validation-warning text-left workflowStatusIndicator" title="Section is incomplete"></span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="workflowStatusPlaceholder"></span>
                                                }
                                            </span>
                                            <span style="display: inline-block; width: 80%">
                                                <span>@gisUploadAttemptWorkflowSectionSimple.SectionDisplayName</span>
                                            </span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }

                }
            </ul>
        </nav>
    </div>


    <div id="main-container" class="col-sm-8 col-md-9">
        <div class="row"><div class="col-sm-12"><h3 style="margin-top: 5px; margin-bottom: 0px;">@ViewDataTyped.CurrentSectionDisplayName</h3></div></div>
        <hr style="border-top: 1px solid #ddd;" />
        @RenderBody()
    </div>
</div>
@*@if (ViewDataTyped.GisUploadAttempt != null)
{
    <div class="col-sm-8 col-sm-offset-4 col-md-9 col-md-offset-3">
        <div class="row">
            <div class="col-xs-6" style="padding-left: 0;">
            </div>
            <div class="col-xs-6">
                <div class="pull-right">

                    @if (ViewDataTyped.CanAdvanceStage)
                    {
                        <span>
                            @ModalDialogFormHelper.ModalDialogFormLink(string.Format("<button class='btn btn-xs btn-firma'>{0} Approve</button>", BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-open")), ViewDataTyped.ApproveUrl, "Approve Proposal", 400, "Approve", "Cancel", null, null, null)
                        </span>
                    }
                    else
                    {
                        <button class="btn btn-xs btn-firma" disabled>Approve</button>
                    }

                </div>
            </div>
        </div>
    </div>
}*@