@*-----------------------------------------------------------------------
    <copyright file="EditPeople.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.BootstrapWrappers
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.Agreement.EditAgreementGrantAllocations

<script type="text/javascript" src="@Url.Content("~/Views/Agreement/EditAgreementGrantAllocationsController.js")"></script>

<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function ()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    jQuery(document).ready(function ()
    {
        angular.bootstrap(jQuery("#EditAgreementGrantAllocationsAngularApp"), ["ProjectFirmaApp"]);

        jQuery(".selectpicker").selectpicker("refresh");
        jQuery(".modal").on("hidden.bs.modal",
            function() {
                jQuery(".bootstrap-select.open").removeClass("open");
            });

        jQuery(".modal").css({"overflow": "visible"});
        jQuery(".modal-body").css({"overflow-y": "visible"});

    });
    // ]]>
</script>

<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />

<style>

    .table > tbody > tr.subRelationships > td {
        border-top: none;
        padding-top: 0;
    }

    .col-xs-5.personIdSelectGroup div.bootstrap-select.btn-group {
        width: 100%;
    }

    #WrappingDivForAllContent {
        min-height: 200px;
    }

</style>

@*We need to add some extra space here because the select dropdown will appear inside the 
  region of the dialog, and needs space to grow.*@
    <div class="validationError">
        @Html.ValidationSummary()
    </div>

    <div id="EditAgreementGrantAllocationsAngularApp" ng-controller="EditAgreementGrantAllocationsController">
        <div class="row">
            <div class="col-md-12">
                <p>Select the @FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized() that are associated with your @FieldDefinition.Agreement.GetFieldDefinitionLabel(). </p>
            </div>
        </div>

        <div id="WrappingDivForAllContent" class="row">
            @*<div class="col-md-9 col-md-pull-3">*@
            <div class="col-md-12">
                <div class="row">
                    @*Selectpicker*@
                    <div class="col-md-10">
                        <div class="input-group" style="width: 100%;">
                            <select class="selectpicker" id="todo{{AngularViewData.GrantAllocationId}}"
                                    ng-model="selectedGrantAllocationID"
                                    @*ng-change="console.log('selection changed')"*@
                                    data-width="100%" data-live-search="true" data-size="8">
                                <option value="" disabled selected ng-bind="dropdownDefaultOption()">Select one</option>
                                <option ng-repeat="grantAllocation in getAvailableGrantAllocationsForAgreement()"
                                        ng-bind="(grantAllocation.GrantNumber) + ' ' + (grantAllocation.ProjectName)"
                                        ng-value="grantAllocation.GrantAllocationID"
                                        ng-selected="isOptionSelected(grantAllocation)"></option>
                            </select>
                            <button type="button" class="btn btn-sm btn-firma" ng-click="addGrantAllocation(selectedGrantAllocationID)">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add
                            </button>
                        </div>
                    </div>
                </div>
                <br/>
                <span>Currently Selected Grant Allocations:</span>
                <div class="row" ng-repeat="currentGrantAllocationJson in AngularModel.GrantAllocationJsons" style="margin-top: 5px;">
                    @*Selections*@
                    <div class="col-md-12">
                        <span>
                            <a href="#" ng-click="removeSelectedGrantAllocation(currentGrantAllocationJson.GrantAllocationID); $event.preventDefault();">
                            <i class="glyphicon glyphicon-trash" title="Remove @FieldDefinition.GrantAllocation.GetFieldDefinitionLabel()" alt="Remove @FieldDefinition.GrantAllocation.GetFieldDefinitionLabel()"></i>
                        </a>
                        </span>
                        <span ng-bind="(currentGrantAllocationJson.GrantNumber) + ' ' + (currentGrantAllocationJson.ProjectName)"></span>
                    </div>
                </div>
            </div>
        </div>

        @using (Html.BeginForm())
        {
            <div ng-repeat="grantAllocationJson in AngularModel.GrantAllocationJsons">
                <input type="hidden" name="@Html.NameFor(x => x.GrantAllocationJsons[0].GrantAllocationID).ToString().Replace("0", "{{$index}}")" value="{{grantAllocationJson.GrantAllocationID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.GrantAllocationJsons[0].ProjectName).ToString().Replace("0", "{{$index}}")" value="{{grantAllocationJson.ProjectName}}" />
            </div>
        }
    </div>




