@*-----------------------------------------------------------------------
    <copyright file="EditProject.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@inherits ProjectFirma.Web.Views.Agreement.EditAgreement

@Html.Raw(ViewDataTyped.EditAgreementType.IntroductoryText)

@Html.ValidationSummary()

<style type="text/css">

    form .form-group-tight {
        margin-top: 15px;
        margin-bottom: 15px;
    }
</style>


@using (Html.BeginForm())
{
    <div class="col-xs-11">
        <div class="form-horizontal">

            <div class="form-group form-group-tight">
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementTitle)
                    </div>
                    <div class="col-xs-8">
                        @Html.TextBoxFor(m => m.AgreementTitle, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementTitle)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementNumber)
                    </div>
                    <div class="col-xs-8">
                        @Html.TextBoxFor(m => m.AgreementNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementNumber)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.OrganizationID)
                    </div>
                    <div class="col-xs-8">
                        @Html.DropDownListFor(m => m.OrganizationID, ViewDataTyped.OrganizationList, new { style = "width: 100%;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.OrganizationID)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreemeentStatusID)
                    </div>
                    <div class="col-xs-8">
                        @Html.DropDownListFor(m => m.AgreemeentStatusID, ViewDataTyped.AgreementStatusList, new { style = "width: 100%;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreemeentStatusID)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementTypeID)
                    </div>
                    <div class="col-xs-8">
                        @Html.DropDownListFor(m => m.AgreementTypeID, ViewDataTyped.AgreementTypeList, new { style = "width: auto;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementTypeID)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementAmount)
                    </div>
                    <div class="col-xs-8">
                        @Html.EditorFor(m => m.AgreementAmount,new { @class = "form-control agreementAmountClass" })
                        @Html.ValidationMessageFor(m => m.AgreementAmount)
                    </div>
                </div>

                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementStartDate)
                    </div>
                    <div class="col-xs-8">
                        @Html.EditorFor(m => m.AgreementStartDate, new { style = "width: auto;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementStartDate)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementEndDate)
                    </div>
                    <div class="col-xs-8">
                        @Html.EditorFor(m => m.AgreementEndDate, new { style = "width: auto;", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementEndDate)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementNotes)
                    </div>
                    <div class="col-xs-8">
                        @Html.TextBoxFor(m => m.AgreementNotes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementNotes)
                    </div>
                </div>
                <div class="form-group form-group-tight">
                    <div class="col-sm-3 control-label">
                        @Html.LabelWithSugarFor(x => x.AgreementFileResourceData)
                    </div>
                    <div class="col-sm-9">
                        @Html.EditorFor(x => x.AgreementFileResourceData)
                        @*<span class="smallExplanationText">
                                Allowed Extensions: @Model.GetFileExtensions(x => x.LogoFileResourceData)
                            </span>*@
                        @Html.ValidationMessageFor(x => x.AgreementFileResourceData)
                    </div>
                </div>
            </div>

        </div>
    </div>
    @Html.HiddenFor(m => m.AgreementID)
}



<script type="text/javascript">
                jQuery(document)
                    .ready(function () {
                        var mouAgreementTypeId = @ViewDataTyped.MOUAgreementTypeID;
                        var mouAgreementTypeIdHasValue = '@ViewDataTyped.MOUAgreementTypeID.HasValue';

                        var ndaAgreementTypeId = @ViewDataTyped.NDAAgreementTypeID;
                        var ndaAgreementTypeIdHasValue = '@ViewDataTyped.NDAAgreementTypeID.HasValue';

                        function updateDisabledFieldsIfMouOrNdaIsSelected(mouAgreementTypeIdVar, ndaAgreementTypeIdVar)
                        {
                            var selectedAgreementTypeIDAsString = jQuery("#@Html.IdFor(m => m.AgreementTypeID)").val().toString();
                            var selectionIsMou = selectedAgreementTypeIDAsString === mouAgreementTypeIdVar.toString();
                            var selectionIsNda = selectedAgreementTypeIDAsString === ndaAgreementTypeIdVar.toString();
                            var agreementAmountInput =
                                jQuery("#@Html.IdFor(m => m.AgreementAmount)" + ".sitkaCurrency");
                            if (selectionIsMou || selectionIsNda) {
                                agreementAmountInput.attr('disabled', 'disabled');
                                agreementAmountInput.val("");
                            } else {
                                agreementAmountInput.removeAttr('disabled');
                            }
                        }


                        if (mouAgreementTypeIdHasValue == 'True' || mouAgreementTypeIdHasValue == 'true' ||
                            ndaAgreementTypeIdHasValue == 'True' || ndaAgreementTypeIdHasValue == 'true') {
                            updateDisabledFieldsIfMouOrNdaIsSelected(mouAgreementTypeId, ndaAgreementTypeId);
                            jQuery("#@Html.IdFor(m => m.AgreementTypeID)").on("change", function() {
                                updateDisabledFieldsIfMouOrNdaIsSelected(mouAgreementTypeId, ndaAgreementTypeId);
                            });
                        }
                    });
</script>
