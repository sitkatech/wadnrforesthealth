@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using LtInfo.Common.ModalDialog
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@inherits ProjectFirma.Web.Views.Agreement.Detail

@functions {
    private string GetAgreementGrantAllocationUrl(AgreementGrantAllocation currentAgreementGrantAllocation)
    {
        return SitkaRoute<GrantAllocationController>.BuildUrlFromExpression(c => c.GrantAllocationDetail(new GrantAllocationPrimaryKey(currentAgreementGrantAllocation.GrantAllocation)));
    }

    private List<AgreementGrantAllocation> CurrentAgreementGrantAllocationsInSortedOrder()
    {
        List<AgreementGrantAllocation> agreementGrantAllocations = ViewDataTyped.Agreement.AgreementGrantAllocations.ToList();
        return AgreementGrantAllocation.OrderAgreementGrantAllocationsByYearPrefixedGrantNumbersThenEverythingElse(agreementGrantAllocations);
    }

}

@section JavascriptAndStylesContent
{

    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link href="~/Content/bootstrap-tags/bootstrap-tags.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <script src="@Url.Content("~/Content/bootstrap-toc/bootstrap-toc.min.js")" type="text/javascript"></script>
}

<style type="text/css">

    .basicsLayout .row {
        margin-left: 0;
        margin-right: 0;
    }

        .basicsLayout .row div {
            padding-left: 0;
            padding-right: 5px;
        }

    .basicsLayout hr {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>

<div>
    <a class="btn backButton" style="padding-left: 0;" href="@ViewDataTyped.AgreementsListUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") @ViewDataTyped.BackToAgreementsText</a>
</div>



<div class="col-sm-12 col-md-9 col-lg-10">
    <div class="row">
        <div class="col-sm-12" style="padding: 0px;">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    <h3>
                        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditAgreementUrl, string.Format("Edit {0}", ViewDataTyped.Agreement.AgreementTitle), 950, ViewDataTyped.UserHasEditAgreementPermissions)
                        @FieldDefinition.Agreement.GetFieldDefinitionLabel() Basics
                    </h3>
                </div>
                <div class="panel-body">
                    <div class="basicsLayout">
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementTitle)
                            </div>

                            <div class="col-sm-9">
                                <span id="Name">@ViewDataTyped.Agreement.AgreementTitle</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementNumber)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementTitle">@ViewDataTyped.Agreement.AgreementNumber</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.Organization)
                            </div>
                            <div class="col-sm-9">
                                <span id="Organization">@UrlTemplate.MakeHrefString(ViewDataTyped.Agreement.GetOrganizationDetailUrl(), ViewDataTyped.Agreement.Organization.DisplayName)</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementStartDate)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementStartDate">@ViewDataTyped.Agreement.StartDateDisplay</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementEndDate)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementEndDate">@ViewDataTyped.Agreement.EndDateDisplay</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementStatus)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementStatus">@ViewDataTyped.Agreement.AgreementStatus.AgreementStatusName</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementType)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementType">@(ViewDataTyped.Agreement.AgreementType != null ? ViewDataTyped.Agreement.AgreementType.AgreementTypeName : string.Format("No {0} selected", FieldDefinition.AgreementType.GetFieldDefinitionLabel()))</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.GrantNumber)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementFundingSource">@UrlTemplate.MakeHrefString(ViewDataTyped.Agreement.GetGrantDetailUrl(), ViewDataTyped.Agreement.GrantNumberDisplay)</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementAmount)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementAmount">@ViewDataTyped.Agreement.AgreementAmount.ToStringCurrency()</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.AgreementNotes)
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementNotes">@ViewDataTyped.Agreement.Notes</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">
                                @Html.LabelWithSugarFor(FieldDefinition.FileResource, "Agreement File")
                            </div>
                            <div class="col-sm-9">
                                <span id="AgreementFile">
                                    @if (ViewDataTyped.ShowDownload)
                                    {
                                        <a href="@ViewDataTyped.Agreement.AgreementFileResource.FileResourceUrl">
                                            @ViewDataTyped.Agreement.AgreementFileResource.OriginalBaseFilename
                                        </a>
                                    }
                                    else
                                    {
                                        <span>No documents uploaded yet.</span>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12" style="padding: 0px;">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditAgreementGrantAllocationRelationshipsUrl, string.Format("Associate {0} and {1}", FieldDefinition.Agreement.GetFieldDefinitionLabel(), FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized()), 750, ViewDataTyped.UserHasEditAgreementPermissions)
                    Grant Allocations associated to this @FieldDefinition.Agreement.GetFieldDefinitionLabel()
                </div>
                <div class="panel-body">
                    @*Display grant allocations in descending order according to grant number year*@
                    @foreach (var currentAgreementGrantAllocation in CurrentAgreementGrantAllocationsInSortedOrder())
                    {
                        <a href="@GetAgreementGrantAllocationUrl(currentAgreementGrantAllocation)">@currentAgreementGrantAllocation.GrantAllocation.Grant.GrantNumber @currentAgreementGrantAllocation.GrantAllocation.ProjectName</a>
                        <br/>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12" style="padding: 0px;">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    <h3>
                        @FieldDefinition.Agreement.GetFieldDefinitionLabel() Contacts
                    </h3>
                </div>
                <div class="panel-body">
                    @Html.DhtmlxGrid(ViewDataTyped.AgreementPersonGridSpec, ViewDataTyped.AgreementPersonGridName, ViewDataTyped.AgreementPersonGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                </div>
            </div>
        </div>
    </div>
</div>
