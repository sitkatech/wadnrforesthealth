@*-----------------------------------------------------------------------
    <copyright file="EditGrantAllocationAwardTravelLineItem.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models

@inherits ProjectFirma.Web.Views.GrantAllocationAward.EditGrantAllocationAwardTravelLineItem

<script type="text/javascript">
    // <![CDATA[


    jQuery(function () {
        jQuery("input[type=radio][name=@Html.IdFor(m => m.TypeID)]").on("change", function () {
            //debugger;
            if (jQuery(this).val() == @GrantAllocationAwardTravelLineItemType.Transportation.GrantAllocationAwardTravelLineItemTypeID) {
                jQuery("#@Html.IdFor(m => m.Amount)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.Miles)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.MileageRate)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.Amount)").val(0);
            } else {
                jQuery("#@Html.IdFor(m => m.Amount)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.Miles)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.MileageRate)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.Miles)").val(0);
                jQuery("#@Html.IdFor(m => m.MileageRate)").val(0);

            }
        });

        jQuery("#@Html.IdFor(m => m.MileageRate)").on("change", function () {
            CalculateAmountField();
        });

        jQuery("#@Html.IdFor(m => m.Miles)").on("change", function () {
            CalculateAmountField();
        });

        jQuery("input[type=radio][name=@Html.IdFor(m => m.TypeID)]:checked").trigger("change");

    });

    function CalculateAmountField() {
        //debugger;
        var miles = jQuery("#@Html.IdFor(m => m.Miles)").val();
        var mileageRate = jQuery("#@Html.IdFor(m => m.MileageRate)").val().replace('$', '');
        jQuery("#@Html.IdFor(m => m.Amount)").val('$' + (miles * mileageRate));
    }
    // ]]>
</script>

    @Html.ValidationSummary()


    @using (Html.BeginForm())
    {

        @Html.HiddenFor(m => m.GrantAllocationAwardTravelLineItemID)
        @Html.HiddenFor(m => m.GrantAllocationAwardID)

        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.PersonID)
                </div>
                <div class="col-sm-9">
                    @Html.SearchableDropDownListFor(m => m.PersonID, ViewDataTyped.People, new { @class = "form-control selectpicker", style = "width:auto" })
                    @Html.ValidationMessageFor(m => m.PersonID)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.TarOrMonth)
                </div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.TarOrMonth, new { @class = "form-control", style = "width:100%" })
                    @Html.ValidationMessageFor(m => m.TarOrMonth)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.Date)
                </div>
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Date, new { @class = "form-control", style = "width:auto" })
                    @Html.ValidationMessageFor(m => m.Date)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.TypeID)
                </div>
                <div class="col-sm-9">
                    <div class="radio-inline">
                        <label>
                            <input @(Model.TypeID == GrantAllocationAwardTravelLineItemType.Transportation.GrantAllocationAwardTravelLineItemTypeID ? "checked=\"checked\"" : string.Empty ) id="@GrantAllocationAwardTravelLineItemType.Transportation.GrantAllocationAwardTravelLineItemTypeName" name="@Html.IdFor(m => m.TypeID)" type="radio" value="@GrantAllocationAwardTravelLineItemType.Transportation.GrantAllocationAwardTravelLineItemTypeID">
                            @GrantAllocationAwardTravelLineItemType.Transportation.GrantAllocationAwardTravelLineItemTypeDisplayName
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label>
                            <input @(Model.TypeID == GrantAllocationAwardTravelLineItemType.Other.GrantAllocationAwardTravelLineItemTypeID ? "checked=\"checked\"" : string.Empty ) id="@GrantAllocationAwardTravelLineItemType.Other.GrantAllocationAwardTravelLineItemTypeName" name="@Html.IdFor(m => m.TypeID)" type="radio" value="@GrantAllocationAwardTravelLineItemType.Other.GrantAllocationAwardTravelLineItemTypeID">
                            @GrantAllocationAwardTravelLineItemType.Other.GrantAllocationAwardTravelLineItemTypeDisplayName
                        </label>
                    </div>
                    @Html.ValidationMessageFor(m => m.TypeID)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.Miles)
                </div>
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Miles, new { @class = "form-control", style = "width:auto" })
                    @Html.ValidationMessageFor(m => m.Miles)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.MileageRate)
                </div>
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.MileageRate, new { @class = "form-control", style = "width:auto" })
                    @Html.ValidationMessageFor(m => m.MileageRate)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.Amount)
                </div>
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.Amount, new { @class = "form-control", style = "width:auto" })
                    @Html.ValidationMessageFor(m => m.Amount)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 control-label">
                    @Html.LabelWithSugarFor(m => m.Notes)
                </div>
                <div class="col-sm-9">
                    @Html.TextAreaWithMaxLengthFor(m => m.Notes, new TextAreaForExtensions.TextAreaDimensions(null, 4), string.Empty, new List<string>() { "form-control"})
                    @Html.ValidationMessageFor(m => m.Notes)
                </div>
            </div>
        </div>

    }



