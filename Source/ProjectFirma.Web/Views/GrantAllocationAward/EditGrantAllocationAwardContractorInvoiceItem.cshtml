@*-----------------------------------------------------------------------
    <copyright file="EditGrantAllocationAwardContractorInvoiceItem.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models

@inherits ProjectFirma.Web.Views.GrantAllocationAward.EditGrantAllocationAwardContractorInvoiceItem

<script type="text/javascript">
    // <![CDATA[


    jQuery(function () {
        jQuery("input[type=radio][name=@Html.IdFor(m => m.TypeID)]").on("change", function () {
            //debugger;
            if (jQuery(this).val() == @GrantAllocationAwardContractorInvoiceType.Hourly.GrantAllocationAwardContractorInvoiceTypeID) {
                jQuery("#@Html.IdFor(m => m.Total)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.ForemanHours)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.ForemanRate)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.LaborHours)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.LaborRate)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.GrappleHours)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.GrappleRate)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.MasticationHours)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.MasticationRate)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.Total)").val(0);
            } else {
                jQuery("#@Html.IdFor(m => m.Total)").prop("disabled", false);
                jQuery("#@Html.IdFor(m => m.ForemanHours)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.ForemanRate)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.LaborHours)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.LaborRate)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.GrappleHours)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.GrappleRate)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.MasticationHours)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.MasticationRate)").prop("disabled", true);
                jQuery("#@Html.IdFor(m => m.ForemanHours)").val(0);
                jQuery("#@Html.IdFor(m => m.ForemanRate)").val(0);
                jQuery("#@Html.IdFor(m => m.LaborHours)").val(0);
                jQuery("#@Html.IdFor(m => m.LaborRate)").val(0);
                jQuery("#@Html.IdFor(m => m.GrappleHours)").val(0);
                jQuery("#@Html.IdFor(m => m.GrappleRate)").val(0);
                jQuery("#@Html.IdFor(m => m.MasticationHours)").val(0);
                jQuery("#@Html.IdFor(m => m.MasticationRate)").val(0);
            }
        });

        jQuery("#@Html.IdFor(m => m.ForemanHours)").on("change", function () {
            CalculateTotalField();
        });
        jQuery("#@Html.IdFor(m => m.ForemanRate)").on("change", function () {
            CalculateTotalField();
        });

        jQuery("input[type=radio][name=@Html.IdFor(m => m.TypeID)]:checked").trigger("change");

    });

    function CalculateTotalField() {
        //debugger;
        var foremanHours = jQuery("#@Html.IdFor(m => m.ForemanHours)").val();
        var foremanRate = jQuery("#@Html.IdFor(m => m.ForemanRate)").val().replace('$', '');
        var laborHours = jQuery("#@Html.IdFor(m => m.LaborHours)").val();
        var laborRate = jQuery("#@Html.IdFor(m => m.LaborRate)").val().replace('$', '');
        var grappleHours = jQuery("#@Html.IdFor(m => m.GrappleHours)").val();
        var grappleRate = jQuery("#@Html.IdFor(m => m.GrappleRate)").val().replace('$', '');
        var masticationHours = jQuery("#@Html.IdFor(m => m.MasticationHours)").val();
        var masticationRate = jQuery("#@Html.IdFor(m => m.MasticationRate)").val().replace('$', '');
        jQuery("#@Html.IdFor(m => m.Total)").val('$' + ((foremanHours * foremanRate) + (laborHours * laborRate) + (grappleHours * grappleRate) + (masticationHours * masticationRate)));
    }
    // ]]>
</script>

@Html.ValidationSummary()


@using (Html.BeginForm())
{

    @Html.HiddenFor(m => m.GrantAllocationAwardContractorInvoiceID)
    @Html.HiddenFor(m => m.GrantAllocationAwardID)

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.Description)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control", style = "width:100%" })
                @Html.ValidationMessageFor(m => m.Description)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.InvoiceNumber)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.InvoiceNumber, new { @class = "form-control", style = "width:100%" })
                @Html.ValidationMessageFor(m => m.InvoiceNumber)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.Date)
            </div>
            <div class="col-sm-9">
                @Html.EditorFor(m => m.Date, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.Date)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.TypeID)
            </div>
            <div class="col-sm-9">
                <div class="radio-inline">
                    <label>
                        <input @(Model.TypeID == GrantAllocationAwardContractorInvoiceType.Hourly.GrantAllocationAwardContractorInvoiceTypeID ? "checked=\"checked\"" : string.Empty ) id="@GrantAllocationAwardContractorInvoiceType.Hourly.GrantAllocationAwardContractorInvoiceTypeName" name="@Html.IdFor(m => m.TypeID)" type="radio" value="@GrantAllocationAwardContractorInvoiceType.Hourly.GrantAllocationAwardContractorInvoiceTypeID">
                        @GrantAllocationAwardContractorInvoiceType.Hourly.GrantAllocationAwardContractorInvoiceTypeDisplayName
                    </label>
                </div>
                <div class="radio-inline">
                    <label>
                        <input @(Model.TypeID == GrantAllocationAwardContractorInvoiceType.Other.GrantAllocationAwardContractorInvoiceTypeID ? "checked=\"checked\"" : string.Empty ) id="@GrantAllocationAwardContractorInvoiceType.Other.GrantAllocationAwardContractorInvoiceTypeName" name="@Html.IdFor(m => m.TypeID)" type="radio" value="@GrantAllocationAwardContractorInvoiceType.Other.GrantAllocationAwardContractorInvoiceTypeID">
                        @GrantAllocationAwardContractorInvoiceType.Other.GrantAllocationAwardContractorInvoiceTypeDisplayName
                    </label>
                </div>
                @Html.ValidationMessageFor(m => m.TypeID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.ForemanHours)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.ForemanHours, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.ForemanHours)
            </div>
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.ForemanRate)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.ForemanRate, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.ForemanRate)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.LaborHours)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.LaborHours, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.LaborHours)
            </div>

            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.LaborRate)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.LaborRate, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.LaborRate)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrappleHours)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.GrappleHours, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.GrappleHours)
            </div>

            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrappleRate)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.GrappleRate, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.GrappleRate)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.MasticationHours)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.MasticationHours, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.MasticationHours)
            </div>
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.MasticationRate)
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(m => m.MasticationRate, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.MasticationRate)
            </div>
        </div>


        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.Total)
            </div>
            <div class="col-sm-9">
                @Html.EditorFor(m => m.Total, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.Total)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.TaxRate)
            </div>
            <div class="col-sm-9">
                @Html.EditorFor(m => m.TaxRate, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.TaxRate)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.AcresReported)
            </div>
            <div class="col-sm-9">
                @Html.EditorFor(m => m.AcresReported, new { @class = "form-control", style = "width:auto" })
                @Html.ValidationMessageFor(m => m.AcresReported)
            </div>
        </div>
        
        <div class="form-group form-group-tight">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(x => x.FileResourceData)
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(x => x.FileResourceData)
                @Html.ValidationMessageFor(x => x.FileResourceData)
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.Notes)
            </div>
            <div class="col-sm-9">
                @Html.TextAreaWithMaxLengthFor(m => m.Notes, new TextAreaForExtensions.TextAreaDimensions(null, 4), string.Empty, new List<string>() { "form-control" })
                @Html.ValidationMessageFor(m => m.Notes)
            </div>
        </div>
    </div>

}



